{"pageProps":{"posts":[{"frontMatter":{"id":40,"title":"웹 개발을 위한 HTML 가이드 번외 3편 - 탈출문자 사용하기","description":"저번 글 웹 개발을 위한 HTML 가이드 23편 - code, pre 태그에서 예고했던대로 이번 글에서는 HTML에서 사용할 수 있는 탈출 문자에 대해서 알아보려고 합니다. HTML은 웹 페이지의 골격을 만들기 위해 존재합니다. 여기까지는 이제는 다들 아실 것 같아요. 그런데, 이 페이지에 사용되는 문자 중에는 태그 요소에 사용되는 꺽쇠가 쓰일 때가 있습니다. 이 문서처럼 HTML 문법에 관련된 컨텐츠일 경우엔 더더욱 그렇겠죠. 그럴 때 HTML 파일에 꺽쇠를 생각 없이 적으면 웹 페이지가 깨져버릴 수가 있습니다. 왜냐하면 HTML을 실행하면 브라우저가 검사하면서 렌더링을 해주는데 이 과정에서 꺽쇠를 만나면 태그 요소라고 인식을 해버리기 때문입니다. 웹 페이지가 깨져버리면 우리가 원하는 모양이 나오지 않기 때문에 일종의 버그라고 할 수 있겠죠. 이러한 현상을 방지 하기 위해 우리는 탈출 문자를 사용합니다.","coverImage":"https://drive.google.com/uc?export=view&id=1uC2qw2Iye3QkSTNcydjtlW63Zgec1C6_","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","탈출 문자"],"categories":["가이드","HTML"],"createdAt":1649932710000,"updatedAt":1650266363000,"keywords":[],"drawDate":1649932710000,"display":true,"type":"post"},"slug":"2022-04-14-40-string-escape","fullPath":"/post/2022-04-14-40-string-escape","content":"\r\nimport {\r\n  HTMLTextPosts, A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P, Quote, Score, Youtube, Ul, Ol, Em, Gray,\r\n  Code, Kbd, Image, Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name, Dt, Dd\r\n} from '@/components/Post';\r\n\r\n<HtmlGuideMessage/>\r\n\r\n<HTMLTextPosts/>\r\n\r\n# 개요\r\n저번 글 [웹 개발을 위한 HTML 가이드 23편 - code, pre 태그](/post/2022-03-29-39-code-and-pre-tag)에서 예고했던대로 이번 글에서는 HTML에서 사용할 수 있는 탈출 문자에 대해서 알아보려고 합니다.\r\n\r\nHTML은 웹 페이지의 골격을 만들기 위해 존재합니다. 여기까지는 이제는 다들 아실 것 같아요. 그런데, 이 페이지에 사용되는 문자 중에는 태그 요소에 사용되는 꺽쇠가 쓰일 때가 있습니다. 이 문서처럼 HTML 문법에 관련된 컨텐츠일 경우엔 더더욱 그렇겠죠. 그럴 때 HTML 파일에 꺽쇠를 생각 없이 적으면 **웹 페이지가 깨져버릴 수가 있습니다.**\r\n\r\n왜냐하면 HTML을 실행하면 브라우저가 검사하면서 렌더링을 해주는데 이 과정에서 꺽쇠를 만나면 태그 요소라고 인식을 해버리기 때문입니다. 웹 페이지가 깨져버리면 우리가 원하는 모양이 나오지 않기 때문에 일종의 버그라고 할 수 있겠죠. 이러한 현상을 방지 하기 위해 우리는 **탈출 문자**를 사용합니다.\r\n\r\n# 탈출 문자\r\n탈출 문자는 프로그래밍을 하면서 특수문자를 사용할 때 혹은 프로그램적인 제한에서 탈출하기 위해 사용하는 문자들입니다. 이러한 행위들을 **Escape**라고 합니다. 다른 프로그래밍 언어들에도 탈출 문자는 존재합니다. 아무튼 이 글에서는 HTML에 한정된 것들을 다루려고 합니다. 전부를 다루는 것은 어려우니까 자주 다루는 것만 추려서 보여드리도록 하겠습니다.\r\n\r\n## 자주 사용하는 특수문자\r\n이 아래는 자주 사용하는 특수문자들을 HTML 문법과 충돌하지 않게 사용하는 방법들입니다.\r\n\r\n<Dl>\r\n  <Dt>\\&lt;</Dt>\r\n  <Dd>&lt;(여는 꺽쇠)를 나타냅니다.</Dd>\r\n  <Dt>\\&gt;</Dt>\r\n  <Dd>&gt;(닫는 꺽쇠)를 나타냅니다.</Dd>\r\n  <Dt>\\&nbsp;</Dt>\r\n  <Dd>공백을 나타냅니다.</Dd>\r\n  <Dt>\\&amp;</Dt>\r\n  <Dd>&amp;를 나타냅니다.</Dd>\r\n  <Dt>\\&quot;</Dt>\r\n  <Dd>&quot;(큰따옴표)를 나타냅니다.</Dd>\r\n</Dl>\r\n\r\n## 그 외의 문자들\r\n<P>위의 내용들은 알아두면 좋은 내용들이지만 사실 반드시 알아야 하지는 않습니다. 어차피 필요하면 찾아보면 되니까요. 그럴 때 <A type='normal' href='https://dev.w3.org/html5/html-author/charref'>이 사이트</A>에서 찾아보시면 되겠습니다. 되게 상당한 개수의 특수문자들이 존재합니다.</P>\r\n\r\n<Line />\r\n\r\n<P>이번 글에서는 HTML 상에서 특수문자를 제한없이 사용하는 방법인 <Strong>탈출(Escape)</Strong>에 대해서 알아봤습니다. 사실 탈출문자는 다른 프로그래밍 언어들에서 더 많이 찾게 될 겁니다. 그 때가 언젠가는 오시기 바라면서 이번 글 마치도록 하겠습니다. 다음 글에서는 <Strong>나머지 텍스트 관련 태그들</Strong>에 대해서 다뤄보도록 하겠습니다. 다음 글에서 봅시다.</P>\r\n","date":{"year":"2022","month":"04","yearMonth":"2022-04"}},{"frontMatter":{"id":39,"title":"웹 개발을 위한 HTML 가이드 23편 - code, pre 태그","description":"이번 글은 웹 개발을 위한 HTML 가이드 23편입니다. 이번 글에서는 두가지의 태그를 알아보려고 합니다. code태그와 pre태그입니다. 이 두 태그는 웹 상에서 코드를 문자 그대로 보여주는 역할을 합니다. 보통은 코드 예시를 보여줄 때에 사용하는 편입니다. 이 블로그에서 찍어온 아래의 두 이미지처럼 말이죠. 어떤 태그에 대해서 살펴볼 것인지는 알았으니 이제 본론으로 들어가도록 합시다. code태그는 코드의 이름이나 내용을 언급하고 싶을 때에 사용합니다. 인라인 태그이며 기본적으로는 줄바꿈이 되지 않습니다. 사실 이 글에서도 많이 쓰이고 있습니다.","coverImage":"https://drive.google.com/uc?export=view&id=1OhyAifoAcmKofIJmlW7Cj5VjdGaAN4j_","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","코드 태그","code 태그","pre 태그"],"categories":["가이드","HTML"],"createdAt":1648511041000,"updatedAt":1648511041000,"keywords":[],"drawDate":1648511041000,"display":true,"type":"post"},"slug":"2022-03-29-39-code-and-pre-tag","fullPath":"/post/2022-03-29-39-code-and-pre-tag","content":"\r\nimport { HTMLTextPosts, A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P, Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image, Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name, Dt, Dd } from '@/components/Post';\r\n\r\n<HtmlGuideMessage/>\r\n\r\n<HTMLTextPosts/>\r\n\r\n# 개요\r\n이번 글은 웹 개발을 위한 HTML 가이드 23편입니다. 이번 글에서는 두가지의 태그를 알아보려고 합니다. `code`태그와 `pre`태그입니다. 이 **두 태그는 웹 상에서 코드를 문자 그대로 보여주는 역할을 합니다.** 보통은 코드 예시를 보여줄 때에 사용하는 편입니다. 이 블로그에서 찍어온 아래의 두 이미지처럼 말이죠.\r\n\r\n![code, pre 태그 예시 1](https://drive.google.com/uc?export=view&id=1yaidFV9h49vtiyPxK7ZTo4NspDsRbPOA)\r\n![code, pre 태그 예시 2](https://drive.google.com/uc?export=view&id=17N_SBitbT7znsyQic7fmrKMFP0vOs7iD)\r\n\r\n어떤 태그에 대해서 살펴볼 것인지는 알았으니 이제 본론으로 들어가도록 합시다.\r\n\r\n# code 태그\r\n`code`태그는 코드의 이름이나 내용을 언급하고 싶을 때에 사용합니다. 인라인 태그이며 기본적으로는 줄바꿈이 되지 않습니다. 사실 이 글에서도 많이 쓰이고 있습니다.\r\n\r\n```html\r\n<p>자바스크립트로 콘솔에 아이유 좋아! 라는 내용을 띄우고 싶으면 <code>console.log('아이유 좋아!')</code>을 사용한다.</p>\r\n```\r\n\r\n![code 태그를 사용한 모습이다.](https://drive.google.com/uc?export=view&id=1a3s30cfh_1GrHDHr4s4O9iVDgnZ3hwya)\r\n\r\n위 이미지는 `code`태그를 사용한 페이지입니다. `code`태그는 내용물을 기본 텍스트와 다른 모양으로 보여줍니다. 잘 보면 글꼴이 다른 것을 볼 수 있죠. 이런 문제는 나중에 스타일을 입혀서 디자인을 하면 되는 부분이기 때문에 중요한 것은 아닙니다.\r\n\r\n`code`태그는 인라인 태그라고 했습니다. 이 말은 문단 내에 사용한다는 이야기죠. 그렇다면 여러줄의 코드를 보여주고 싶다면 어떻게 해야할까요? 바로 그 때! `pre`태그를 이용하면 됩니다.\r\n\r\n# pre 태그\r\n사실 `pre`태그는 코드를 있는 그대로 보여주는 태그는 아닙니다. 하지만 `br`태그를 사용하지 않아도 줄바꿈을 가능하게 만들어주기 때문에 `code`태그와 함께 사용되는 것이 보통입니다. 일단 `pre`태그만 사용된 경우를 보여드리겠습니다.\r\n\r\n```html\r\n<pre>\r\n  <span>아이유</span>\r\n  <span>만세</span>\r\n</pre>\r\n```\r\n\r\n![pre 태그를 사용한 모습이다.](https://drive.google.com/uc?export=view&id=1zCeEAVEfQWyQbmn6RVuGRKDKjjpXSe9Z)\r\n\r\n`pre`태그는 안에 있는 태그들의 효과를 무효화하지 않지만 이렇게 줄바꿈이 되고 공백마저도 그대로 나타내는 것을 볼 수 있습니다.\r\n\r\n# 함께 사용하기\r\n이번에는 `pre`태그를 `code`태그와 함께 사용한 경우를 보여드리겠습니다. 보통은 아래처럼 동시에 사용하여 코드를 보여줄 때에 사용합니다. 현재 이 블로그에도 이런식으로 구성이 되어있습니다.\r\n\r\n```html\r\n<p>아래는 자바스크립트에서 클래스를 만드는 방법입니다.</p>\r\n\r\n<pre>\r\n  <code>\r\n    class Person {\r\n      constructor(name, age) {\r\n        this.name = name;\r\n        this.age = age;\r\n      }\r\n    }\r\n\r\n    const nihil = new Person('NIHILncunia', 30);\r\n  </code>\r\n</pre>\r\n```\r\n\r\n![pre 태그와 code 태그를 함께 사용한 모습이다.](https://drive.google.com/uc?export=view&id=1Tgv0MT6rU6_bewOMQ3NiFG9VPvIJyedg)\r\n\r\n하지만 착각하면 안되는 점은 `pre`태그나 `code`태그의 안에 들어간 내용이 태그일 때에 **태그 자체를 무효화하지는 않는다는 점**입니다. `pre`태그와 `code`태그를 함께 사용해서 HTML 코드를 보여주고 싶을 때에는 꺽쇄를 사용하면 안됩니다. 꺽쇄를 사용하면 HTML 문법을 적용하는 게 되기 때문입니다.\r\n\r\n그럼 어떻게 해야할까요? 지금 다루기는 좀 어렵고... 이에 대한 해결책을 바로 다음 글에서 다룹니다. 다음 글은 **HTML에서 특수문자를 사용할 수 있는 탈출문자에 대해**서 다루도록 하겠습니다.\r\n\r\n<Line />\r\n\r\n이번 가이드에서 준비된 내용은 여기까지입니다. 이번 글에서는 `pre`태그와 `code`태그에 대해서 알아봤습니다. 이 두 태그는 웹 상에서 코드를 보여주고 싶을 때에 사용한다. 라는 점을 잘 이해하시면 되겠습니다. 다음 글에서는 위에서 예고했던대로 탈출문자에 대해서 알아볼 예정입니다. 그럼 이번 글은 여기서 마치도록 하겠습니다. 다음 글에서 봅시다.\r\n","date":{"year":"2022","month":"03","yearMonth":"2022-03"}},{"frontMatter":{"id":38,"title":"웹 개발을 위한 HTML 가이드 22편 - small 태그","description":"이번 글은 웹 개발을 위한 HTML 가이드 22편입니다. 이번 글에서 다룰 내용은 저번 글에서 예고했던대로 small태그입니다. 텍스트 관련 태그도 어느정도 진행이 된 것 같습니다. 이제 정말 얼마 안남았거든요. 사실 이번 글에서 다룰 내용도 그다지 중요한 내용은 아닙니다. 그래도 일단은 다루고 넘어가려고 합니다. 그럼 바로 본론으로 들어가봅시다. small태그는 작은 텍스트를 표현할 때에 사용합니다. 기존의 텍스트보다 약간 작아지는 효과를 가지고 있습니다. 특별한 의미나 기능을 가지는 태그는 아니기 때문에 몰라도 좋았으나 지금은 특별한 의미가 생겼습니다.","coverImage":"https://drive.google.com/uc?export=view&id=1WxRQj4rm8_zFbyKb-sSV0S9_i-llFiCD","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","small 태그","덧붙임 글 태그"],"categories":["가이드","HTML"],"createdAt":1641845490000,"updatedAt":1641845490000,"keywords":[],"drawDate":1641845490000,"display":true,"type":"post"},"slug":"2022-01-11-38-small-tag","fullPath":"/post/2022-01-11-38-small-tag","content":"\r\nimport { HTMLTextPosts, A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P, Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image, Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name, Dt, Dd } from '@/components/Post';\r\n\r\n<HtmlGuideMessage />\r\n\r\n<HTMLTextPosts />\r\n\r\n# 제목\r\n이번 글은 **웹 개발을 위한 HTML 가이드** 22편입니다. 이번 글에서 다룰 내용은 저번 글에서 예고했던대로 `small`태그입니다. 텍스트 관련 태그도 어느정도 진행이 된 것 같습니다. 이제 정말 얼마 안남았거든요. 사실 이번 글에서 다룰 내용도 그다지 중요한 내용은 아닙니다. 그래도 일단은 다루고 넘어가려고 합니다. 그럼 바로 본론으로 들어가봅시다.\r\n\r\n# small 태그\r\n<P><Code>small</Code>태그는 작은 텍스트를 표현할 때에 사용합니다. <Strong>기존의 텍스트보다 약간 작아지는 효과</Strong>를 가지고 있습니다. 특별한 의미나 기능을 가지는 태그는 아니기 때문에 몰라도 좋<Bold>았으나</Bold> 지금은 특별한 의미가 생겼습니다.</P>\r\n\r\n```html file=small.html\r\n<p>small 태그는 이렇게 <small>작은 텍스트를 표현할 때에 사용합니다.</small></p>\r\n```\r\n\r\nvscode를 열고 대충 따라서 입력을 해보고 라이브 서버를 열어보세요. 그럼 아래와 같은 결과물이 나타나게 됩니다.\r\n\r\n![small 태그를 사용한 모습이다.](https://drive.google.com/uc?export=view&id=1GYLGBvF4ZU0xWwQkaqbsNejfXbgcqrtk)\r\n\r\n정말 텍스트가 작아졌습니다. **HTML 5**가 나타나면서 `small`태그에 변화가 생겼습니다. 현재는 페이지의 본문에 비해 비교적 중요도가 떨어지는 작은 영역에 쓰는 것을 권장하고 있습니다. 이를테면 저작권을 표기하는 부분을 예로 들 수 있겠습니다.\r\n\r\n![small 태그의 기본 스타일.](https://drive.google.com/uc?export=view&id=1dy5i3KktKWJ1Z-LDFdbl39s3_Jrtn5hM)\r\n\r\n`small`태그를 사용하지 않고도 똑같은 효과를 만드는 방법이 있는데, 바로 **CSS를 활용**하는 것입니다. 우리는 아직 CSS를 배우지 않았기 때문에 아래의 코드를 봐도 아 이런 게 있구나라는 시선으로 바라보면 되겠습니다.\r\n\r\n보면 알겠지만 `small`태그에는 `font-size: smaller;`라는 CSS가 적용되어 있습니다. `small`태그의 기본 스타일 입니다. 그렇기 때문에 위의 코드와 아래의 코드는 동일한 셈입니다. 이렇게 CSS를 활용해도 되고 `small`태그를 활용해도 됩니다. 물론 외관상으로는 동일하지만 그 의미는 전혀 다르다는 점을 인지하고 있어야합니다.\r\n\r\n```html file=small.html\r\n<p>small 태그는 이렇게 <span>작은 텍스트를 표현할 때에 사용합니다.</span></p>\r\n```\r\n\r\n```css\r\nspan {\r\n  font-size: smaller;\r\n}\r\n```\r\n\r\n<Line />\r\n\r\n이번 글에서는 간단하게 `small`태그에 대해서 알아봤습니다. 저작권이나 연락처 같은 비교적 중요도가 떨어지는 부분에 사용하는 태그였습니다. 이번 글에서 준비한 내용은 여기까지입니다. 다음 글에서는 코드 블럭을 다루는 `code`태그와 `pre`태그에 대해서 알아보도록 하겠습니다. 이번 글은 여기서 마치도록 하고 다음 글에서 봅시다.\r\n","date":{"year":"2022","month":"01","yearMonth":"2022-01"}},{"frontMatter":{"id":37,"title":"웹 개발을 위한 HTML 가이드 21편 - 하이라이트 태그","description":"이번 글은 웹 개발을 위한 HTML 가이드 21편입니다. 이번 글의 주제는 하이라이트 태그입니다. 우리는 간혹 어떤 페이지 내에서 그 페이지와 연관이 있는 단어나 내용을 강조하고 싶을 때가 있습니다. 이 연관성에 초점을 두고 사용하는 태그가 바로 하이라이트를 위한 태그입니다. 이번에 알아볼 태그는 바로 mark태그입니다. mark태그의 기본적인 디자인은 노란색 배경입니다. 마치 형광펜으로 그은 것처럼 표시가 되어있죠. 그래서 하이라이트라고 하는 겁니다. mark태그는 HTML 5에서 처음 등장했습니다. 사용자들에게 원하는 부분을 찾는 수고를 덜하게끔 하기 위해서 하이라이트를 통해 표시를 할 때 사용합니다.","coverImage":"https://drive.google.com/uc?export=view&id=1noFRwYG_XT1AVqzTmbo20PjyamI8MC5Y","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","mark 태그","하이라이트 태그"],"categories":["가이드","HTML"],"createdAt":1641762607000,"updatedAt":1641762607000,"keywords":[],"drawDate":1641762607000,"display":true,"type":"post"},"slug":"2022-01-10-37-mark-tag","fullPath":"/post/2022-01-10-37-mark-tag","content":"\r\nimport { HTMLTextPosts, A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P, Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image, Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name, Dt, Dd } from '@/components/Post';\r\n\r\n<HtmlGuideMessage />\r\n\r\n<HTMLTextPosts />\r\n\r\n# 제목\r\n<P>이번 글은 웹 개발을 위한 HTML 가이드 21편입니다. 이번 글의 주제는 하이라이트 태그입니다. 우리는 <Mark>간혹 어떤 페이지 내에서 그 페이지와 연관이 있는 단어나 내용을 강조하고 싶을 때가 있습니다.</Mark> 이 연관성에 초점을 두고 사용하는 태그가 바로 <Strong>하이라이트</Strong>를 위한 태그입니다. 이번에 알아볼 태그는 바로 <Code>mark</Code>태그입니다.</P>\r\n\r\n# mark 태그\r\n```html file=mark.html\r\n<h1>아이유 생일</h1>\r\n<p>\r\n  아이유의 생일은 <mark>5월 16일</mark>입니다.\r\n</p>\r\n```\r\n\r\n![mark 태그는 연관성을 강조한다.](https://drive.google.com/uc?export=view&id=1GDn2C51M0o6zNn7nNwR0OX97h9pwkiDm)\r\n\r\n`mark`태그의 기본적인 디자인은 노란색 배경입니다. 마치 형광펜으로 그은 것처럼 표시가 되어있죠. 그래서 **하이라이트**라고 하는 겁니다. `mark`태그는 HTML 5에서 처음 등장했습니다. 사용자들에게 원하는 부분을 찾는 수고를 덜하게끔 하기 위해서 하이라이트를 통해 표시를 할 때 사용합니다.\r\n\r\n<P>단어나 문장을 강조한다는 점에서 <Code>em</Code>태그나 <Code>strong</Code>태그와 비슷하죠. 하지만 이 두가지는 <Strong>중요성</Strong>을 강조하는 것이고 <Code>mark</Code>태그는 <Strong>연관성</Strong>을 강조한다는 것이 다릅니다. <Mark>따라서 중요하지 않더라도 주제와 연관이 있는 문구, 단어를 강조</Mark>할 수 있습니다. 현재 이 글의 붉은색 배경의 텍스트가 바로 <Code>mark</Code>태그가 사용된 부분입니다.</P>\r\n\r\n<Line />\r\n\r\n이번 글에서는 하이라이트를 담당하는 태그인 `mark`태그에 대해서 알아봤습니다. `mark`태그는 `em`태그나 `strong`태그처럼 단어나 문장을 강조하지만 **중요성이 아닌 연관성을 초점으로 두고 강조하는 점**이 다릅니다. 이번 글에서 준비된 내용은 여기까지입니다.\r\n\r\n이번 글은 여기서 마치도록 하겠습니다. 다음 글에서는 `small`태그에 대해서 알아봅시다.\r\n","date":{"year":"2022","month":"01","yearMonth":"2022-01"}},{"frontMatter":{"id":36,"title":"웹 개발을 위한 HTML 가이드 20편 - 인용 태그","description":"2021년도 막바지에 이르렀습니다. 사실 올해도 그닥 대단한 일은 한 게 없고 공부만 주야장천 한 것 같습니다. 다가오는 2022년에는 좀 더 새로운 변화를 주고 좀 더 나은 사람이 되려고 노력해보려고 합니다. 그래서 새로운 마음으로 밤낮도 바꿔보고 있습니다. 잘 안된다는 게 함정이지만. 그래서 상쾌한 마음으로 오랜만에 글을 하나 남겨봅니다. 이번 글은 웹 개발을 위한 HTML 가이드 20편입니다. 텍스트 관련 태그의 6번째 글이고 이번 글에서 다룰 내용은 인용 태그입니다. 인용이라는 것은 우리가 일상 생활을 하면서도 볼 수 있고 다양한 글에서도 발견할 수 있죠. 인용은 다른 사람의 말을 가져와서 비유하는데에 쓰거나 설명하는데에 쓰는 것을 말합니다. 자신이 하고 싶은 말이 있을 때 인용을 통해서 대신할 수도 있고 말입니다.","coverImage":"https://drive.google.com/uc?export=view&id=1S5_ygMpyP7pn1YANEsmHu8xaq9M69YMJ","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","인용 태그","q 태그","blockquote 태그"],"categories":["가이드","HTML"],"createdAt":1640825909000,"updatedAt":1640825909000,"keywords":[],"drawDate":1640825909000,"display":true,"type":"post"},"slug":"2021-12-30-36-q-and-blockquote-tag","fullPath":"/post/2021-12-30-36-q-and-blockquote-tag","content":"\r\nimport {\r\n  A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name,\r\n  Dt, Dd, HTMLTextPosts\r\n} from '@/components/Post';\r\n\r\n<HtmlGuideMessage />\r\n\r\n<HTMLTextPosts />\r\n\r\n# 개요\r\n2021년도 막바지에 이르렀습니다. 사실 올해도 그닥 대단한 일은 한 게 없고 공부만 주야장천 한 것 같습니다. 다가오는 2022년에는 좀 더 새로운 변화를 주고 좀 더 나은 사람이 되려고 노력해보려고 합니다. 그래서 새로운 마음으로 밤낮도 바꿔보고 있습니다. 잘 안된다는 게 함정이지만.\r\n\r\n그래서 상쾌한 마음으로 오랜만에 글을 하나 남겨봅니다. 이번 글은 **웹 개발을 위한 HTML 가이드** 20편입니다. 텍스트 관련 태그의 6번째 글이고 이번 글에서 다룰 내용은 **인용 태그**입니다. 인용이라는 것은 우리가 일상 생활을 하면서도 볼 수 있고 다양한 글에서도 발견할 수 있죠. 인용은 다른 사람의 말을 가져와서 비유하는데에 쓰거나 설명하는데에 쓰는 것을 말합니다. 자신이 하고 싶은 말이 있을 때 인용을 통해서 대신할 수도 있고 말입니다.\r\n\r\n**CSS**를 함께 다뤄야 좀 더 의미가 있는 태그지만 일단은 그냥 알아보도록 합시다.\r\n\r\n# 인용 태그\r\n암튼 그래서 이번에 알아볼 인용 태그에는 **두 가지의 태그**가 존재합니다. 하나는 **블럭 형식의 태그**고 나머지 하나는 **인라인 형식의 태그**입니다. 이 두가지의 태그를 경우에 따라서 사용하면 되겠습니다.\r\n\r\n## q 태그\r\n문단 내에 **인용문을 넣고 싶을 때**에 사용하는 `q`태그는 인라인 형식의 태그입니다. 긴 인용문이 아닌 **짧은 인용문을 표현**할 때에 사용합니다.\r\n\r\n```html file=q.html\r\n<p>\r\n  아이유가 맡은 장만월이라는 캐릭터는 <q cite=\"url\">넌 0순위야. 너 아니면 안 되는 거 맞아. 내 마음에 쏙 들었으니까.</q> 라는 말을 한 적이 있다.\r\n</p>\r\n```\r\n\r\n![q 태그는 따옴표가 붙는다.](https://drive.google.com/uc?export=view&id=1U-Cps5tBoWcDnftiyjx3VC8aNkUp2BfQ)\r\n\r\n`q`태그는 이렇게 열고 닫는 태그입니다. 안에 내용을 넣어주면 됩니다. 브라우저에서는 보이는 것처럼 따옴표가 둘러쌓이게 됩니다. 인라인 형식의 태그이기 때문에 `p`태그 안에서 사용하는 게 보통입니다.\r\n\r\n사용 가능한 속성으로는 `cite`속성이 있습니다. 여기에는 **출처가 되는 url**를 넣으면 됩니다.\r\n\r\n## blockquote 태그\r\n이번에는 블럭 형식의 인용 태그를 알아봅시다. 블럭 형식이기 때문에 줄바꿈을 함께 사용할 수 있습니다. **짧은 인용이 아닌 긴 인용문을 넣을 때**에 이 `blockquote`태그를 사용합니다.\r\n\r\n```html file=blockquote.html\r\n<p>아이유는 호텔 델루나라는 드라마에서 장만월이라는 역할을 맡았다. 그 캐릭터는 아래와 같은 대사를 한 적이 있다.</p>\r\n<blockquote cite=\"url\">\r\n  넌 0순위야. 너 아니면 안 되는 거 맞아.\r\n  내 마음에 쏙 들었으니까.\r\n</blockquote>\r\n```\r\n\r\n![blockquote 태그는 문단과 구분된다.](https://drive.google.com/uc?export=view&id=1aZtSZNoX3xeKIvPhvOC1sQNAeg0Co5RG)\r\n\r\n이 태그도 여는 태그와 닫는 태그가 있어서 이런식으로 사용하면 됩니다. `blockquote`태그는 따옴표가 생기지 않는 대신 자동으로 **들여쓰기가 되고 일반 문단이랑 구분된 모습**을 갖게 됩니다.\r\n\r\n`blockquote`태그에도 `cite`속성이 사용됩니다. **url**을 넣어주시면 됩니다. `blockquote`태그는 이렇게만 사용하면 당연히 밋밋하고 심심한 디자인이죠. 그래서 CSS를 통해 바꾸는 편입니다. 가 아니라 그냥 바꿔야 합니다. HTML은 CSS와 떼려야 뗄 수 없는 관계입니다. 언젠가는 알게 되실겁니다.\r\n\r\n<Line />\r\n\r\n이번 글에서는 간단하게 인용 태그들에 대해서 알아봤습니다. **인용 태그는 두가지**가 있고 **인라인 형식인 `q`태그**와 **블럭 형식인 `blockquote`태그**가 있습니다. 이 두 태그는 상황에 맞게 사용하면 되겠습니다. 이번 글에서 준비된 내용은 여기까지입니다. 다음 글에서는 **하이라이트 태그**에 대해서 알아보도록 합시다.\r\n\r\n이번 글은 여기서 마치도록 하겠습니다. 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"12","yearMonth":"2021-12"}}],"notices":[{"frontMatter":{"id":22,"title":"블로그 이름 변경","description":"2021년 7월 14일부로 이 블로그의 이름이 니힐 블로그에서 니힐로그로 변경되었습니다. 이름을 바꾼 이유는 예전에 만들어놓은 티스토리 블로그의 이름과 똑같기 때문에 문제가 생길 것 같아서 바꿨습니다. 이참에 그 블로그도 완전히 정리를 해서 문제가 없게 해야겠습니다. 이름을 변경하면서 여러가지 부분을 수정하기도 했고 지금 블로그에 쓰이는 로고들도 살짝 교체했습니다. 문제는 썸네일인데 썸네일은 하나 하나 바꾸는 게 힘들어서 그냥 두기로 했습니다. 이 공지부터 새로운 이름이 적용된 썸네일을 이용할 생각입니다.","coverImage":"https://drive.google.com/uc?export=view&id=1ig8LXIQV8ZoKTAWz7DQE5h07ovsEXS4x","tags":[],"categories":[],"createdAt":1626205980000,"updatedAt":1626205980000,"keywords":[],"drawDate":-2211786000000,"display":true,"type":"notice"},"slug":"2021-07-14-01-blog-name-change","fullPath":"/notice/2021-07-14-01-blog-name-change","content":"\r\nimport {\r\n  A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name,\r\n  Dt, Dd\r\n} from '@/components/Post';\r\n\r\n**2021년 7월 14일**부로 이 블로그의 이름이 **니힐 블로그**에서 **니힐로그**로 변경되었습니다. 이름을 바꾼 이유는 예전에 만들어놓은 티스토리 블로그의 이름과 똑같기 때문에 문제가 생길 것 같아서 바꿨습니다. 이참에 그 블로그도 완전히 정리를 해서 문제가 없게 해야겠습니다.\r\n\r\n이름을 변경하면서 여러가지 부분을 수정하기도 했고 지금 블로그에 쓰이는 로고들도 살짝 교체했습니다. 문제는 썸네일인데 썸네일은 하나 하나 바꾸는 게 힘들어서 그냥 두기로 했습니다. 이 공지부터 새로운 이름이 적용된 썸네일을 이용할 생각입니다.\r\n\r\n코로나가 극성이고 한여름이라 상당히 더운 하루하루라서 포스팅은 쉬고 있고 이런 저런 코드만 만지고 있었습니다. 블로그의 코드도 만졌고 다른 프로젝트들도 진행하고 있었는데 이게 점점 더워져서 화딱지가 나려고 하는군요. 그래도 아무것도 안하고 있는 건 아니고 잘 살아가고 있는 것 같아 뿌듯하네요. 이제부터 천천히 포스트를 하나 하나 작성해 나가야겠습니다.\r\n","date":{"year":"2021","month":"07","yearMonth":"2021-07"}},{"frontMatter":{"id":1,"title":"블로그를 본격적으로 시작합니다.","description":"Next.js로 직접 블로그로 만들겠다고 이런 저런 정보를 찾아서 백지부터 시작해서 작업을 진행한 지 2주 정도 흘렀습니다. 이제는 블로그가 모양을 갖추어서 슬슬 본격적으로 포스팅을 해도 상관 없을 것 같다고 판단하고, 블로그를 제대로 시작하려합니다. 이 블로그는 프로그래밍을 중점으로 컨텐츠를 채워나갈 것이고 그 컨텐츠들은 연습이나 복습차원에서 진행하는 프로그래밍 언어 가이드가 될 것 같습니다.","coverImage":"https://drive.google.com/uc?export=view&id=1iZz2aCAF4PX0gy_757GpYf8LMnQxk5vi","tags":[],"categories":[],"createdAt":1619932140000,"updatedAt":1619932140000,"keywords":[],"drawDate":-2211786000000,"display":true,"type":"notice"},"slug":"2021-05-02-01-blog-begins","fullPath":"/notice/2021-05-02-01-blog-begins","content":"\r\nimport {\r\n  A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name,\r\n  Dt, Dd\r\n} from '@/components/Post';\r\n\r\n**Next.js**로 직접 블로그로 만들겠다고 이런 저런 정보를 찾아서 백지부터 시작해서 작업을 진행한 지 2주 정도 흘렀습니다. 이제는 블로그가 모양을 갖추어서 슬슬 본격적으로 포스팅을 해도 상관 없을 것 같다고 판단하고, 블로그를 제대로 시작하려합니다. 이 블로그는 프로그래밍을 중점으로 컨텐츠를 채워나갈 것이고 그 컨텐츠들은 연습이나 복습차원에서 진행하는 프로그래밍 언어 가이드가 될 것 같습니다.\r\n\r\n물론, 프로그래밍이 아니더라도 일본어 컨텐츠나 게임에 관련된 컨텐츠들도 다룰 예정입니다. 사람이 항상 공부만 하고 있을 수는 없는 노릇이죠. 아무튼 처음으로 직접 블로그의 곳곳을 구현해봤는데 정말 감회가 새로운 작업이었고 이 블로그에는 많은 애착이 갈 것 같습니다. 이번 작업을 하면서 새로이 알게 된 것들도 있고 확실히 재밌는 작업이었습니다. 이제부터 천천히 포스트를 작성할 예정이고, 더 구현해야 하는 기능들도 있지만, 천천히 살펴보면 될 듯 합니다.\r\n\r\n이번에 블로그를 만들면서 마크다운 문법으로 포스트를 작성할 수 있도록 만들어놓았기 때문에 포스트 작성이 상당히 편리해진만큼, 앞으로 다양한 컨텐츠를 가지고 포스트를 작성해보도록 하고, 약 다섯 번은 운영했었던 블로그를 또 다시 이렇게 운영하게 될 줄은 몰랐지만, 활기차게 새로운 시작을 해보려고 합니다.\r\n\r\n누가 보게 될 지는 모르지만 그거랑 상관없이 글은 천천히 작성해야겠습니다.\r\n","date":{"year":"2021","month":"05","yearMonth":"2021-05"}}]},"__N_SSG":true}
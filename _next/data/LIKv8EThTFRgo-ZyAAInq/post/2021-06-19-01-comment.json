{"pageProps":{"post":{"frontMatter":{"title":"웹 개발을 위한 HTML 가이드 8편 - 주석","description":"우리는 살아가면서 아주 다양한 메모를 합니다. 메모의 목적은 잊어버리지 않기 위함이죠. 잊을만할때 메모를 보면 다시 명확하게 떠오르기도 합니다. 프로그래밍을 하는 도중에도 우리는 메모를 할 수 있습니다. 이를 주석이라고 표현합니다. 영어로는 Comment라고 합니다. 주석은 파일 내에 적혀 있지만 실질적인 프로그래밍의 내용에는 들어가지 않는 구문을 말합니다. 즉 영향을 주지 않는 코드를 말하는 겁니다. 주석을 적는 행위를 보고 주석을 단다고 하기도 합니다.","coverImage":"post/html/웹 개발을 위한 HTML 가이드 8","categories":["가이드","HTML"],"tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","주석"],"createdAt":1624103280000,"updatedAt":1624103280000,"display":true,"notice":false},"source":{"compiledSource":"var y=Object.defineProperty,M=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var a=(o,e,t)=>e in o?y(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,n=(o,e)=>{for(var t in e||(e={}))r.call(e,t)&&a(o,t,e[t]);if(p)for(var t of p(e))m.call(e,t)&&a(o,t,e[t]);return o},s=(o,e)=>M(o,l(e));var c=(o,e)=>{var t={};for(var d in o)r.call(o,d)&&e.indexOf(d)<0&&(t[d]=o[d]);if(o!=null&&p)for(var d of p(o))e.indexOf(d)<0&&m.call(o,d)&&(t[d]=o[d]);return t};const makeShortcode=o=>function(t){return console.warn(\"Component \"+o+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",n({},t))},HtmlGuideMessage=makeShortcode(\"HtmlGuideMessage\"),P=makeShortcode(\"P\"),Bold=makeShortcode(\"Bold\"),Strong=makeShortcode(\"Strong\"),Mark=makeShortcode(\"Mark\"),Code=makeShortcode(\"Code\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var d=t,{components:o}=d,e=c(d,[\"components\"]);return mdx(MDXLayout,s(n(n({},layoutProps),e),{components:o,mdxType:\"MDXLayout\"}),mdx(HtmlGuideMessage,{mdxType:\"HtmlGuideMessage\"}),mdx(P,{mdxType:\"P\"},\"\\uC6B0\\uB9AC\\uB294 \\uC0B4\\uC544\\uAC00\\uBA74\\uC11C \\uC544\\uC8FC \\uB2E4\\uC591\\uD55C \\uBA54\\uBAA8\\uB97C \\uD569\\uB2C8\\uB2E4. \\uBA54\\uBAA8\\uC758 \\uBAA9\\uC801\\uC740 \\uC78A\\uC5B4\\uBC84\\uB9AC\\uC9C0 \\uC54A\\uAE30 \\uC704\\uD568\\uC774\\uC8E0. \\uC78A\\uC744\\uB9CC\\uD560\\uB54C \\uBA54\\uBAA8\\uB97C \\uBCF4\\uBA74 \\uB2E4\\uC2DC \\uBA85\\uD655\\uD558\\uAC8C \\uB5A0\\uC624\\uB974\\uAE30\\uB3C4 \\uD569\\uB2C8\\uB2E4. \",mdx(Bold,{mdxType:\"Bold\"},\"\\uD504\\uB85C\\uADF8\\uB798\\uBC0D\\uC744 \\uD558\\uB294 \\uB3C4\\uC911\\uC5D0\\uB3C4 \\uC6B0\\uB9AC\\uB294 \\uBA54\\uBAA8\\uB97C \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"),\" \\uC774\\uB97C \",mdx(Strong,{mdxType:\"Strong\"},\"\\uC8FC\\uC11D\"),\"\\uC774\\uB77C\\uACE0 \\uD558\\uACE0, \\uC601\\uC5B4\\uB85C\\uB294 \",mdx(Strong,{mdxType:\"Strong\"},\"Comment\"),\"\\uB77C\\uACE0 \\uD569\\uB2C8\\uB2E4.\"),mdx(\"p\",null,\"\\uC6F9 \\uAC1C\\uBC1C\\uC744 \\uC704\\uD55C HTML \\uAC00\\uC774\\uB4DC 8\\uD3B8\\uC740 \\uC8FC\\uC11D\\uC5D0 \\uB300\\uD574 \\uB2E4\\uB8F9\\uB2C8\\uB2E4. \\uC0AC\\uC2E4 \\uC8FC\\uC11D\\uC5D0 \\uB300\\uD574\\uC120 \\uBCC4 \\uAC8C \\uC5C6\\uC9C0\\uB9CC \\uD504\\uB85C\\uADF8\\uB798\\uBC0D\\uC5D0 \\uCCAB\\uAC78\\uC74C\\uC744 \\uD55C \\uC6B0\\uB9AC\\uB294 \\uC65C \\uC8FC\\uC11D\\uC744 \\uC4F0\\uB294\\uC9C0 \\uC54C\\uC544\\uC57C \\uD569\\uB2C8\\uB2E4. \\uCC9C\\uCC9C\\uD788 \\uC54C\\uC544\\uBCF4\\uB3C4\\uB85D \\uD569\\uC2DC\\uB2E4.\"),mdx(P,{mdxType:\"P\"},mdx(Mark,{mdxType:\"Mark\"},\"\\uC8FC\\uC11D\\uC740 \\uD30C\\uC77C \\uB0B4\\uC5D0 \\uC801\\uD600 \\uC788\\uC9C0\\uB9CC \\uC2E4\\uC9C8\\uC801\\uC778 \\uD504\\uB85C\\uADF8\\uB798\\uBC0D\\uC758 \\uB0B4\\uC6A9\\uC5D0\\uB294 \\uB4E4\\uC5B4\\uAC00\\uC9C0 \\uC54A\\uB294 \\uAD6C\\uBB38\\uC744 \\uB9D0\\uD569\\uB2C8\\uB2E4.\"),\" \\uC989 \\uC601\\uD5A5\\uC744 \\uC8FC\\uC9C0 \\uC54A\\uB294 \\uCF54\\uB4DC\\uB97C \\uB9D0\\uD558\\uB294 \\uAC81\\uB2C8\\uB2E4. \\uC8FC\\uC11D\\uC744 \\uC801\\uB294 \\uD589\\uC704\\uB97C \\uBCF4\\uACE0 \\uC8FC\\uC11D\\uC744 \\uB2E8\\uB2E4\\uACE0 \\uD558\\uAE30\\uB3C4 \\uD569\\uB2C8\\uB2E4.\"),mdx(P,{mdxType:\"P\"},\"\\uD504\\uB85C\\uADF8\\uB798\\uBC0D\\uC744 \\uD558\\uB2E4\\uAC00 \\uB098\\uC911\\uC5D0 \\uC218\\uC815\\uC744 \\uD574\\uC57C \\uD558\\uB294 \\uBD80\\uBD84\\uC744 \\uCCB4\\uD06C\\uD574\\uB450\\uACE0 \\uC7A0\\uC744 \\uCCAD\\uD558\\uAC70\\uB098 \\uB2E4\\uB978 \\uC77C\\uC744 \\uD558\\uB294 \\uB54C\\uB3C4 \\uC5B8\\uC820\\uAC00\\uB294 \\uACAA\\uC744 \\uC218 \\uC788\\uACA0\\uC8E0? \\uADF8\\uB7F4 \\uB54C\\uC5D0 \\uC8FC\\uC11D\\uC744 \\uB2EC\\uC544\\uC11C \\uBA54\\uBAA8\\uB97C \\uD574\\uB450\\uAC70\\uB098 \\uD504\\uB85C\\uADF8\\uB798\\uBC0D\\uC744 \\uD558\\uB2E4\\uBCF4\\uBA74 \\uBCF5\\uC7A1\\uD558\\uAC8C \\uC9C4\\uD589\\uB420 \\uB54C\\uAC00 \\uC788\\uB294\\uB370 \\uD2B9\\uC815 \\uAD6C\\uAC04\\uC744 \\uCC3E\\uAE30 \\uC704\\uD574\\uC11C \\uC8FC\\uC11D\\uC744 \\uC911\\uAC04 \\uC911\\uAC04 \\uB2EC\\uC544\\uB450\\uAE30\\uB3C4 \\uD569\\uB2C8\\uB2E4. \\uD639\\uC740 \\uD611\\uC5C5\\uC744 \\uD574\\uC57C \\uD560 \\uB54C\\uC5D0 \\uAC00\\uC774\\uB4DC\\uB77C\\uC778 \\uAC19\\uC740 \\uAC83\\uC744 \\uC801\\uB294 \\uC6A9\\uB3C4\\uB85C\\uB3C4 \\uC8FC\\uC11D\\uC744 \\uC774\\uC6A9\\uD560 \\uC218 \\uC788\\uC8E0.\"),mdx(\"p\",null,\"\\uC8FC\\uC11D\\uC740 \\uB2E4\\uC591\\uD55C \\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uC5B8\\uC5B4\\uAC00 \\uC9C0\\uC6D0\\uD574\\uC8FC\\uB294 \\uAE30\\uB2A5\\uC785\\uB2C8\\uB2E4. \\uC5C6\\uB294 \\uC5B8\\uC5B4\\uB294 \\uC81C\\uAC00 \\uC9C0\\uAE08\\uAE4C\\uC9C0\\uB294 \\uBABB\\uBD24\\uC2B5\\uB2C8\\uB2E4. \\uC544\\uBB34\\uD2BC HTML\\uC5D0\\uC11C\\uC758 \\uC8FC\\uC11D\\uC740 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uD45C\\uD604\\uD569\\uB2C8\\uB2E4.\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-html\"}),`<!-- \\uC8FC\\uC11D\\uC740 \\uC774\\uB807\\uAC8C \\uC0DD\\uACBC\\uC2B5\\uB2C8\\uB2E4. -->\n\n<!--\n  \\uC8FC\\uC11D\\uC740 \\uC5EC\\uB7EC\\uC904\\uC744 \\uAC10\\uC300 \\uC218\\uB3C4 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n-->\n`)),mdx(P,{mdxType:\"P\"},\"\\uB204\\uAC00 HTML \\uC544\\uB2C8\\uB784\\uAE4C\\uBD10 \\uD0DC\\uADF8\\uCC98\\uB7FC \\uC0DD\\uACBC\\uC2B5\\uB2C8\\uB2E4. \",mdx(Bold,{mdxType:\"Bold\"},\"HTML \\uACF5\\uBD80\\uB97C \\uD560 \\uB54C\\uC5D0\\uB294 \\uC8FC\\uC11D\\uC744 \\uC774\\uC6A9\\uD574\\uC11C \\uAC01 \\uCF54\\uB4DC\\uC758 \\uC758\\uBBF8\\uC640 \\uAE30\\uB2A5\\uC744 \\uC801\\uC73C\\uBA74\\uC11C \\uACF5\\uBD80\\uB97C \\uD558\\uB294 \\uAC78 \\uCD94\\uCC9C\\uD569\\uB2C8\\uB2E4!\"),\" \\uC774\\uBC88 \\uAE00\\uC740 \\uC5EC\\uAE30\\uAE4C\\uC9C0 \\uC785\\uB2C8\\uB2E4. \\uB2E4\\uB978 \\uAE00\\uC5D0\\uC11C\\uB294 \\uC815\\uB9D0\\uB85C \\uBCF8\\uACA9\\uC801\\uC73C\\uB85C \\uD0DC\\uADF8\\uB97C \\uD558\\uB098 \\uD558\\uB098 \\uBC30\\uC6B8 \\uAC81\\uB2C8\\uB2E4. \\uB2E4\\uC74C \\uAE00\\uC5D0\\uC11C\\uB294 \",mdx(Code,{mdxType:\"Code\"},\"div\"),\" \\uD0DC\\uADF8\\uC640 \",mdx(Code,{mdxType:\"Code\"},\"span\"),\" \\uD0DC\\uADF8\\uC5D0 \\uB300\\uD574\\uC11C \\uC54C\\uC544\\uBD05\\uC2DC\\uB2E4.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"slug":"2021-06-19-01-comment"},"prev":{"frontMatter":{"title":"웹 개발을 위한 HTML 가이드 7편 - 시맨틱 태그","description":"이번 글은 웹 개발을 위한 HTML 가이드 7편입니다. 이번 글에서는 시맨틱 태그에 대해 다룹니다. 태그의 이름은 아니고 태그의 분류 같은 겁니다. 지금까지 HTML이 발전하면서 다양한 태그가 생겨났습니다. 실질적인 의미와 기능이 일맥상통하는 태그가 있는가 하면 그렇지 않은 태그도 있습니다. 전자의 경우를 시맨틱 태그라고 하고 후자의 경우를 논 시맨틱 태그라고 합니다. 시맨틱은 영어 단어 Semantic 입니다. 이 단어는 의미론적인, 의미의 라는 의미를 갖고 있습니다. 시맨틱 태그는 의미를 가지는 태그들의 총칭입니다. 하지만 이번 글에서 그 리스트 하나 하나를 알아보는 건 아닙니다. 이것이 왜 중요하고 왜 시맨틱 태그를 사용해야 하는지에 대해서 다뤄보도록 할 겁니다.","coverImage":"post/html/웹 개발을 위한 HTML 가이드 7","categories":["가이드","HTML"],"tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","시맨틱 태그"],"createdAt":1623903960000,"updatedAt":1623913800000,"display":true,"notice":false},"filePath":"2021-06-17-01-semantic-tags.mdx","fullPath":"/post/2021-06-17-01-semantic-tags","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage\r\n} from '@/components/PostComponents';\r\n\r\n<HtmlGuideMessage />\r\n\r\n# 시맨틱 태그\r\n이번 글은 웹 개발을 위한 HTML 가이드 7편입니다. 이번 글에서는 시맨틱 태그에 대해 다룹니다. 태그의 이름은 아니고 태그의 분류 같은 겁니다. 지금까지 HTML이 발전하면서 다양한 태그가 생겨났습니다. HTML이 나온지 얼마 안됐을 때부터 HTML 4버전 까지만 해도 태그들이 가지는 의미는 별로 없었습니다. 어떤식으로 표현을 해도 브라우저 상에선 다 같은 것들이었죠.\r\n\r\n그래서 현재 HTML에는 <Mark>실질적인 의미와 기능이 일맥상통하는 태그가 있는가 하면 그렇지 않은 태그도 있습니다. 전자의 경우를 <Strong>시맨틱 태그</Strong>라고 하고 후자의 경우를 <Strong>논 시맨틱 태그</Strong></Mark>라고 합니다.\r\n\r\n시맨틱은 영어 단어 <Strong>Semantic</Strong> 입니다. 이 단어는 <Strong>의미론적인, 의미의</Strong>라는 의미를 갖고 있습니다. 시맨틱 태그는 의미를 가지는 태그들의 총칭입니다. 하지만 이번 글에서 그 리스트 하나 하나를 알아보는 건 아닙니다. 이것이 왜 중요하고 왜 시맨틱 태그를 사용해야 하는지에 대해서 다뤄보도록 할 겁니다.\r\n\r\n## 시맨틱 태그의 중요성\r\n`div` 태그는 공간을 할당하는 태그입니다. 특별한 의미를 갖고 있지 않습니다. `div` 태그 레이아웃을 할당하는데에도 사용하고 텍스트로도 사용합니다. 어떻게 쓰냐에 따라서 달라지기 때문에 그 기능이 명확하지도 않습니다. 그리고 이런 명확하지 않은 특징은 검색엔진이나 브라우저에게도 똑같이 전달됩니다. 과거에는 아래와 같은 방식으로 웹을 구성했습니다.\r\n\r\n```html\r\n<div id=\"header\">헤더</div>\r\n<div id=\"footer\">푸터</div>\r\n```\r\n\r\n위의 코드처럼 개발자들이 알아볼 수 있게 `id` 속성이나 `class` 속성으로 구분을 해도 브라우저나 검색엔진에겐 그냥 `div` 태그일 뿐입니다.\r\n\r\n하지만 HTML 5버전이 나타나면서 여러가지가 바뀌었습니다. 태그 자체가 의미를 가지고 브라우저나 검색 엔진이 그 의미에 맞게끔 처리를 하게 되었습니다. 위의 코드를 요즘 사용되는 방식으로 바꾸자면 아래와 같습니다.\r\n\r\n```html\r\n<header>헤더</header>\r\n<footer>푸터</footer>\r\n```\r\n\r\n시맨틱 태그들은 브라우저도 검색엔진도 그 의미를 파악할 수 있습니다. 아직은 배우지 않았지만 `img` 태그는 <Strong>image</Strong>의 약자이고 말 그대로 이미지와 관련된 태그입니다. 의미가 명확하죠. `p` 태그는 <Strong>Paragraph</Strong>의 약자입니다. 문단이라는 의미죠. `p` 태그는 텍스트 문단을 만드는 태그 입니다.\r\n\r\n시맨틱 태그를 사용하면 지저분하게 `id` 속성이나 `class` 속성을 많이 사용할 필요가 줄어들게 됩니다. 물론 여전히 많은 곳에서 `id` 속성과 `class` 속성을 사용해야 할 겁니다. 요지는 레이아웃을 잡을 때에 사용할 필요가 사라진다는 것이죠.\r\n\r\n이러한 시맨틱 태그는 HTML 5로 넘어오면서 생겨난 개념입니다. 웹 표준 상에서도 이러한 시맨틱 태그를 사용하는 것을 적극적으로 추천하고 있기도 합니다. 그렇기 때문에 시맨틱 태그는 사용하는 것이 좋은 것이고 되도록이면 시맨틱 태그의 활용도를 늘리는 게 중요합니다.\r\n\r\n<Line />\r\n\r\n앞으로 우리는 다양한 태그들을 배울 겁니다. 그 중에는 논 시맨틱 태그도 있고 시맨틱 태그도 있습니다. 어떤 태그를 어떤 상황에 사용해야 하는지는 앞으로 스스로 알게 될테니 걱정하지 않아도 됩니다.\r\n\r\n이번 글은 간단하게 시맨틱 태그에 대해서 알아봤습니다. <Mark>시맨틱 태그를 사용하는 것은 웹 페이지에 도움을 주며 검색엔진에서 페이지가 검색될 가능성을 높여주기도 하기 때문에 사용하면 좋다는 점</Mark>을 다시 한 번 말씀 드립니다. 이번 글은 여기서 마치도록 하고 다음 글에서는 <Strong>주석</Strong>에 대해서 알아봅시다."},"next":{"frontMatter":{"title":"웹 개발을 위한 HTML 가이드 9편 - 공간 할당 태그(div, span)","description":"이전 글까지는 HTML에 대한 기초적인 정보에 대해서 알아봤다면 이번 글부터는 본격적으로 태그들에 대해서 알아보는 시간을 갖도록 할 겁니다. 이번 글에서는 공간을 할당하는 태그인 div 태그와 span 태그에 대해서 알아볼 예정입니다. 공간을 할당하는 태그에는 두가지가 있습니다. 위에서 이미 언급이 된 div 태그와 span 태그입니다. 이 두가지 태그는 가장 많이 사용되는 태그라고 생각하는데, 말 그대로 공간을 할당하기 위한 태그입니다. 이 두가지의 태그는 가장 일반적이고 기초적인 태그들이기 때문에 처음으로 배워볼 태그로 결정했습니다.","coverImage":"post/html/웹 개발을 위한 HTML 가이드 9","categories":["가이드","HTML"],"tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","div","span"],"createdAt":1624553880000,"updatedAt":1624557600000,"display":true,"notice":false},"filePath":"2021-06-25-01-div-and-span-tag.mdx","fullPath":"/post/2021-06-25-01-div-and-span-tag","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage\r\n} from '@/components/PostComponents';\r\n\r\n<HtmlGuideMessage/>\r\n\r\n이전 글까지는 HTML에 대한 기초적인 정보에 대해서 알아봤다면 이번 글부터는 본격적으로 태그들에 대해서 알아보는 시간을 갖도록 할 겁니다. 이번 글에서는 공간을 할당하는 태그인 `div`태그와 `span`태그에 대해서 알아볼 예정입니다.\r\n\r\n# 공간을 할당하는 태그\r\n<P><Bold>공간을 할당하는 태그에는 <Strong>두가지</Strong></Bold>가 있습니다. 위에서 이미 언급이 된 <Code>div</Code>태그와 <Code>span</Code>태그입니다. 이 두가지 태그는 가장 많이 사용되는 태그라고 생각하는데, <Strong>말 그대로 공간을 할당하기 위한 태그</Strong>입니다. 이 두가지의 태그는 가장 일반적이고 기초적인 태그들이기 때문에 처음으로 배워볼 태그로 결정했습니다.</P>\r\n\r\n사실 간간히 이 태그들을 언급하기는 했습니다. 블럭 태그와 인라인 태그를 설명할 때에도 언급을 했었죠. 이를 기억한다면 좋은 거고 그렇지 않다면 [태그의 유형](/post/2021-05-08-01-html-block-inline-tag) 포스트를 읽고 진행하는 것을 추천드립니다.\r\n\r\n여러 개발자들이 공간을 할당하는 태그를 사용하는 주된 목적은 **레이아웃을 구성하는 것**에 있습니다. 레이아웃을 구성한다는 것은 **페이지의 구조를 구성한다는 것**입니다. 어떤 항목을 어디에 둘지에 대한 것이죠. HTML에서는 `div`태그를 통해서 레이아웃을 나눕니다. 경우에 따라서 `span`태그를 이용하기도 합니다. 그럼 이제 각각의 태그를 살펴보도록 합시다.\r\n\r\n## div 태그\r\n나누다, 분할하다 라는 의미를 가진 **Division**의 약자인 `div`태그는 대표적인 **블럭 태그**이며 많은 사람들이 특정 공간을 할당할 때에 자주 사용하는 태그입니다. 말 그대로 공간을 할당하는 태그이기 때문에 그것 외에는 별다른 기능은 없습니다. 딱히 의미를 가지는 태그는 아니기 때문에 `div`태그는 시맨틱 태그가 아니라는 의미가 되겠죠.\r\n\r\n```html\r\n<div>\r\n  <!-- 여기에 내용 -->\r\n</div>\r\n```\r\n\r\n`div`태그는 **CSS**와 함께 사용할 때에 빛을 발합니다. 어떤 의미를 지닌 것은 아니기 때문에 `id`속성이나 `class`속성을 통해서 이름을 붙여줍니다. 어떤 `div`태그는 이미지를 담기 위해 사용될 수 있고 어떤 `div`태그는 텍스트를 담기 위해 사용될 수 있기 때문입니다.\r\n\r\n```html\r\n<div id=\"number-box\">\r\n  <!-- 여기에 내용 -->\r\n</div>\r\n```\r\n\r\n이런 식으로 말입니다. 위의 `div`태그의 용도는 숫자를 담아두기 위한 용도일 겁니다. 이름에 그렇게 표시되어 있기 때문이죠. 어떻게 사용될 지는 누가 코드를 작성하느냐에 따라 다르기 때문에 다양한 방법으로 사용되는 태그입니다.\r\n\r\n## span 태그\r\n범위라는 의미를 가진 단어인 <Bold>span</Bold>과 이름이 같은 `span`태그는 대표적인 인라인 태그입니다. `div`태그와 마찬가지로 별다른 의미를 갖고 있지는 않으며, 그렇기 때문에 시맨틱 태그가 아닙니다.\r\n\r\n`span`태그는 주로 `p`태그 내에서 중요한 정보는 아니지만 굵게 하고 싶거나, 다른 색상으로 강조를 하고 싶을 때에 사용합니다. 중요한 내용이라면 `em`태그나 `strong`태그를 사용하면 되는데 중요한 내용은 아니지만 기울이고 싶거나 색깔을 바꾸고 싶다면 그 때에 `span`태그를 사용하면 되겠습니다. 물론 **CSS**를 활용해야하겠죠!\r\n\r\n```html\r\n<p>span 태그는 <span class=\"red\">이런식</span>으로 사용한다.</p>\r\n```\r\n\r\n다음 파트에서 `p`태그를 배우게 될테니 지금은 몰라도 좋습니다. `em`태그나 `strong`태그도 마찬가지입니다. 지금의 내용을 기억해뒀다가 나중에 다음 파트들에서 생각만 나도 성공입니다.\r\n\r\n<Line />\r\n\r\n이번 글에서는 `div`태그와 `span`태그에 대해서 알아봤습니다. 한 번 오늘 배운 이 두가지의 태그를 만지면서 연습해보면 좋을 것 같습니다. 이번 글은 여기까지 입니다. 다음 글부터는 **텍스트 관련된 태그**를 알아보게 됩니다. 텍스트와 관련된 태그는 상당히 많아서 여러 포스트로 나눌 예정입니다. 그럼 다음 글에서 봅시다."}},"__N_SSG":true}
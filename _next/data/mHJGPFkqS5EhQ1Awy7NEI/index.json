{"pageProps":{"posts":[{"frontMatter":{"id":31,"title":"웹 개발을 위한 HTML 가이드 15편 - 굵기와 기울기 태그","description":"이번 글은 웹 개발을 위한 HTML 가이드 15편입니다. 저번 글에서는 하이퍼 링크를 만들어주는 링크 태그인 a태그에 대해서 알아봤습니다. 이번 글부터는 텍스트에 관련된 태그들을 알아볼 알아보려고 합니다. 태그의 개수가 많아서 여러 파트로 나눠서 진행할 생각입니다. 이 글은 그 첫번째입니다. 이번 글에서 알아볼 태그는 총 네가지로, 굵기 태그 두개와 기울기 태그 두개입니다. 네가지의 태그지만 어렵지는 않기 때문에 간단하게 이해할 수 있을 것이라고 생각됩니다. 자, 그럼 함께 알아보도록 합시다. 텍스트를 강조하는 다양한 방법 중에서 가장 기본적인 두가지의 방법은 텍스트를 굵게 만들거나 기울이는 것입니다. 각각 두가지의 방법이 있는데 어떻게 다르고 어떻게 사용하면 좋은지 간단하게 살피고 다음 파트로 넘어가도록 합시다.","coverImage":"https://drive.google.com/uc?export=view&id=1SYCUKvxXIB0qkzRyjzTFeUd0fKpl2oi2","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","b 태그","i 태그","em 태그","strong 태그","굵기 태그","기울기 태그"],"categories":["가이드","HTML"],"createdAt":1635569880000,"updatedAt":1635569880000,"keywords":[],"drawDate":1635569880000,"display":true,"type":"post"},"slug":"2021-10-30-31-text-bold-and-italic-tags","fullPath":"/post/2021-10-30-31-text-bold-and-italic-tags","content":"\r\n<HtmlGuideMessage />\r\n\r\n<HTMLTextPosts />\r\n\r\n# 개요\r\n이번 글은 웹 개발을 위한 HTML 가이드 15편입니다. 저번 글에서는 **하이퍼 링크**를 만들어주는 링크 태그인 `a`태그에 대해서 알아봤습니다. 이번 글부터는 **텍스트**에 관련된 태그들을 알아볼 알아보려고 합니다. 태그의 개수가 많아서 여러 파트로 나눠서 진행할 생각입니다. 이 글은 그 첫번째입니다. 이번 글에서 알아볼 태그는 총 네가지로, 굵기 태그 두개와 기울기 태그 두개입니다.\r\n\r\n텍스트 관련 태그들은 보통 `p`태그와 함께 이용하는 편입니다. `p`태그가 문단을 나타내는 가장 텍스트스러운 태그이기 때문입니다.\r\n\r\n네가지의 태그지만 어렵지는 않기 때문에 간단하게 이해할 수 있을 것이라고 생각됩니다. 자, 그럼 함께 알아보도록 합시다.\r\n\r\n# 텍스트의 굵기와 기울기\r\n**텍스트를 강조**하는 다양한 방법 중에서 가장 기본적인 두가지의 방법은 **텍스트를 굵게 만들거나 기울이는 것**입니다. 각각 두가지의 방법이 있는데 어떻게 다르고 어떻게 사용하면 좋은지 간단하게 살피고 다음 파트로 넘어가도록 합시다.\r\n\r\n## 굵기 태그\r\n**굵기 태그**에는 두가지가 있다고 했습니다. `b`태그와 `strong`태그입니다. `b`태그의 **b**는 **bold**의 약자입니다. **strong**태그는 말 그대로 강렬한, 강한. 뭐 이런 의미죠. 아래와 같이 사용하면 됩니다.\r\n\r\n```html\r\n<p><b>아이유</b> 좋아</p>\r\n<p><strong>아이유</strong> 좋아</p>\r\n```\r\n\r\n![굵기 태그는 이렇게 보인다.](https://drive.google.com/uc?export=view&id=1-BHeRgS5fglHDlctL4gJQEYmtRS3CpsA)\r\n\r\n위의 코드는 위의 이미지처럼 나타나게 됩니다. 그냥 이렇게만 보면 이 두가지는 별 차이가 없습니다. 둘 다 굵게 만들어주는 태그이기 때문이죠.\r\n\r\n그럼 이 두가지의 태그는 어떻게 다를까요? 중요한 것이 다릅니다. 전자는 그냥 **굵게 만들어주는** 태그일 뿐이고 후자는 **검색 엔진에게 이 텍스트가 중요한 텍스트다 라는 정보를 알려주는 시맨틱한** 태그라는 것이 다른 점입니다. 그렇기 때문에 중요한 정보일 때에는 `strong`태그를 쓰는 것이 웹 페이지의 검색 노출에 도움이 됩니다.\r\n\r\n그저 굵은 텍스트를 만들고 싶은 경우에는 `span`태그를 이용해서 스타일을 조정하는 방법이 있고 이를 권장하고 있습니다. `b`태그는 사실상 더 이상은 잘 쓰이지 않는 태그입니다. 하지만 우리는 아직 **CSS**를 모르니까 이런 게 있다라는 것만 알아두시면 됩니다.\r\n\r\n## 기울기 태그\r\n이번에는 기울기 태그를 알아봅시다. **기울기 태그**에도 두가지가 있습니다. `i`태그와 `em`태그입니다. `i`태그는 **이탤릭체**의 약자라고 보면 됩니다. `em`태그는 **emphasize**의 약자입니다. 중요하다 라는 의미를 지닌 영단어입니다.\r\n\r\n여기서도 감이 오죠. 이 두 태그는 마찬가지로 **시맨틱한 태그냐 아니냐**로 나뉩니다.\r\n\r\n```html\r\n<p><i>아이유</i> 좋아</p>\r\n<p><em>아이유</em> 좋아</p>\r\n```\r\n\r\n![기울기 태그는 이렇게 보인다.](https://drive.google.com/uc?export=view&id=1kwKqLCNGX5KnCorW9-gxU1bUWL7iatvS)\r\n\r\n`b`태그와 마찬가지로 `i`태그도 잘 쓰이지 않습니다. `em`태그를 더 많이 사용합니다. 그냥 기울기를 표현하고 싶다면 `span`태그를 이용해 **CSS**를 조정하는 방법을 사용합니다. 이 역시도 이렇게 하는것을 추천하고 있습니다.\r\n\r\n## 둘 다 사용하기\r\n굵기 태그와 기울기 태그는 **둘 다 사용할 수** 있습니다. 순서와 상관 없이 둘 다 적용하면 아래와 같은 모양이 됩니다. 정말로 중요하다고 강조를 하는거죠.\r\n\r\n```html\r\n<p>아이유는 2021년 10월 19일 자정에 <strong><em>Strawberry Moon</em></strong>을 공개했다.</p>\r\n```\r\n\r\n![굵기와 기울기를 둘 다 사용할 수 있다.](https://drive.google.com/uc?export=view&id=12iwyDXQx2YSgkGQCmFRpqYlQoKOAnNp8)\r\n\r\n# 우리 프로젝트에 적용하기\r\n그럼 이제 우리의 프로젝트에 한 번 적용해보도록 합시다. 우리가 만들었던 <Name>index.html</Name>파일을 기억하실겁니다. **vscode**를 켜고 이 파일을 열어봅시다.\r\n\r\n```html\r\n<body>\r\n  <h1>웹 개발의 3요소</h1>\r\n  <h2><a href=\"https://bit.ly/3lXTSYW\" target=\"_blank\" rel=\"noopener noreferrer\">HTML</a></h2>\r\n  <p>HTML은 웹의 뼈대를 만들어주는 기능을 하는 마크업 언어입니다.</p>\r\n  <h2><a href=\"https://bit.ly/3u9M22j\" target=\"_blank\" rel=\"noopener noreferrer\">CSS</a></h2>\r\n  <p>CSS는 HTML로 만든 뼈대에 피부를 만들어주고 화장을 시켜주는 스타일 시트 언어입니다.</p>\r\n  <h2><a href=\"https://bit.ly/39BnSnM\" target=\"_blank\" rel=\"noopener noreferrer\">JavsScript</a></h2>\r\n  <p>자바스크립트는 HTML과 CSS를 동적으로 제어할 수 있는 웹의 뇌와 같은 언어입니다.</p>\r\n</body>\r\n```\r\n\r\n위와 같은 상태로 저장되어 있을겁니다. 이제 여기에 `strong`태그와 `em`태그를 적용해보려고 합니다. HTML, CSS 자바스크립트라는 텍스트에 적용해보도록 합시다.\r\n\r\n![지금까지의 우리 프로젝트 모습이다.](https://drive.google.com/uc?export=view&id=1ToqeXo15-Fjc6kzbcZd7LUeyoTv9r7_E)\r\n\r\n수정하기 전은 이런 모습이죠. 그럼 이제 수정해봅시다.\r\n\r\n```html\r\n<!-- <p>HTML은 웹의 뼈대를 만들어주는 기능을 하는 마크업 언어입니다.</p> -->\r\n<p><strong><em>HTML</em></strong>은 웹의 뼈대를 만들어주는 기능을 하는 마크업 언어입니다.</p>\r\n\r\n<!-- <p>CSS는 HTML로 만든 뼈대에 피부를 만들어주고 화장을 시켜주는 스타일 시트 언어입니다.</p> -->\r\n<p><strong><em>CSS</em></strong>는 HTML로 만든 뼈대에 피부를 만들어주고 화장을 시켜주는 스타일 시트 언어입니다.</p>\r\n\r\n<!-- <p>자바스크립트는 HTML과 CSS를 동적으로 제어할 수 있는 웹의 뇌와 같은 언어입니다.</p> -->\r\n<p><strong><em>자바스크립트</em></strong>는 HTML과 CSS를 동적으로 제어할 수 있는 웹의 뇌와 같은 언어입니다.</p>\r\n```\r\n\r\n주석처리된 부분이 이전 코드이고 주석이 아닌 부분이 새로운 코드입니다. `strong`태그의 안에 `em`태그를 넣고 그 안에 내용물을 넣었습니다. 이렇게 하고 저장하고 라이브 서버를 켜보면 아래와 같은 모습이 됩니다.\r\n\r\n![프로젝트에 굵기와 기울기를 적용했다.](https://drive.google.com/uc?export=view&id=1nvhhET-ieZFNGu0CiDHj6sJz6lKjaHMV)\r\n\r\n<Line />\r\n\r\n이렇게 우리는 오늘 굵기와 기울기를 적용해봤습니다. 아주 간단하죠? **시맨틱한 태그를 더 많이 사용한다는 것**을 잊지 마시고 공부해봅시다. 앞으로 우리가 알아볼 텍스트 관련 태그가 많습니다. 오늘 함께 배운 내용은 여러번 연습해서 여러분의 것으로 만들어보세요. 이번 글은 여기까지입니다. 다음 글에서는 개행 태그와 가로줄 태그를 알아봅시다.\r\n\r\n개행 태그는 이미 다룬 적이 있지만 그래도 다시 다뤄보도록 하겠습니다. 그럼 더 잘 기억이 되겠죠. 그럼 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"10","yearMonth":"2021-10"}},{"frontMatter":{"id":30,"title":"요즘 구글 서치 콘솔은 바쁜 것 같다","description":"이 블로그를 만든지도 5개월이 되었습니다. 이 블로그를 만들자마자 구글 서치 콘솔로 가서 검색 등록을 하고 사이트맵도 등록을 해둔 상태입니다. 이제 블로그에 글만 잘 채워 넣으면 되겠구나 싶어서 천천히 글을 작성해왔습니다. 그런데 문제가 있었습니다. 사이트맵을 등록했고 얘들 말로는 알아서 자동으로 갱신을 한다고 했는데 갱신이 하나도 안되는겁니다. 가만히 있으면 크롤링을 하지 않아서 구글에 제 글이 검색되지도 않았고 말이죠. 그래서 하는 수 없이 검색에 등록되어야 하는 페이지를 하나 하나 색인에 넣는 작업을 진행했습니다. 그저께도 그런식으로 글을 등록했습니다.","coverImage":"https://drive.google.com/uc?export=view&id=15FUpffvsZGshK9KfK75gwbXsJDVroC_O","tags":["블로그","구글","구글 서치 콘솔","사이트맵","구글 검색등록","google","google search console","blog","sitemap"],"categories":["블로그"],"createdAt":1633344600000,"updatedAt":1633344600000,"keywords":[],"drawDate":1633344600000,"display":true,"type":"post"},"slug":"2021-10-04-30-my-blog-google-search-console","fullPath":"/post/2021-10-04-30-my-blog-google-search-console","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name\r\n} from '@/components/PostComponents';\r\n\r\n이 블로그를 만든지도 5개월이 되었습니다. 이 블로그를 만들자마자 구글 서치 콘솔로 가서 검색 등록을 하고 사이트맵도 등록을 해둔 상태입니다. 이제 블로그에 글만 잘 채워 넣으면 되겠구나 싶어서 천천히 글을 작성해왔습니다. 누군가 보면 좋고 아니면 말고라는 식이긴 했어도 블로그가 검색이 되는건 상당히 중요했는데 어련히 알아서 되겠구나 라는 생각으로 글을 작성했죠. 문제가 있었는지도 모르고 말입니다.\r\n\r\n그 문제라는 것은 몇개월 전에야 알았습니다. 한 3개월 전에 말이죠. 사이트맵을 등록했고 구글 서치 콘솔에 나와 있는 말로는 알아서 자동으로 갱신을 한다고 했는데 어째서인지 갱신이 하나도 안되는겁니다.\r\n\r\n![현재 구글 서치 콘솔에서의 사이트맵의 상태.](https://drive.google.com/uc?export=view&id=1gGTt4-9UVOFmQLoy57wjXkZq_PURELKd)\r\n![사이트맵이 처리되었다고 나와있다.](https://drive.google.com/uc?export=view&id=1atb1qzEEZS0jv2HHAveIMqBtETofbZln)\r\n\r\n심지어는 제가 가만히 있으면 크롤링을 하지 않아서 구글에 제 글이 검색되지도 않았고 말이죠. 제가 지금까지 구글 서치 콘솔을 이용하면서 단 한 번도 이랬던 적이 없는데 다른 사이트들은 잘만 돌아가거든요. 그런데 이 블로그만은 그대로여서 뭔가 싶어가지고 여러 차례 원인을 찾아보려고 했습니다.\r\n\r\n<P>하지만 지금까지는 원인을 찾을 수가 없었습니다. 그래서 하는 수 없이 검색에 등록되어야 하는 페이지를 하나 하나 색인에 넣는 작업을 진행했습니다. 그저께도 그런식으로 글을 등록했습니다. 참 웃긴 점은 이 블로그는 <Strong><A type='normal' href='https://nextjs.org/'>Next.js</A></Strong>로 만들었고 사이트맵도 제가 글을 쓰고 빌드를 할 때마다 자동으로 생성이 됩니다. 그렇게 세팅을 해놨거든요.</P>\r\n\r\n그런데도 구글 서치 콘솔에서는 그걸 읽지를 않는겁니다. 위에는 분명히 사이트맵이 처리가 되었다고 나와있죠. 그런데 22개의 링크만이 확인이 되었답니다. 지금은 35개인데 말이죠! 하지만 확실히 문제는 있는지 색인 생성 범위 보기 버튼은 활성화가 되어있지 않습니다. 이유가 뭔지 하나도 모르겠습니다.\r\n\r\n![실제 내 블로그의 사이트맵의 상태.](https://drive.google.com/uc?export=view&id=1Be5xs3teTm0h-muO46emcwwjgwS-5KrU)\r\n\r\n이놈의 사이트맵은 지금도 갱신이 안되고 있습니다. 중간에 한 번 갱신이 되긴 했는데 왜 그런 것인지는 모르겠지만 사이트맵이 갱신은 안되더라도 블로그의 글들이 검색은 되더군요. 전부 되는지는 확인 안해봤지만요. 아무튼간에 지금은 검색도 되고 있고 불편한 건 없지만 거슬리는 건 색인은 되었지만 사이트맵에 처리는 안되어 있다는 겁니다.\r\n\r\n![내 블로그의 색인 상태.](https://drive.google.com/uc?export=view&id=1j-XBrCDBvp_NV3NjeJrMtXt1mEh0V2LM)\r\n\r\n구글에 검색을 해봐도 뭐 어떻게 비슷한 증상이 있는 사람들이 있는건지 없는건지 잘 보이지도 않고 답답한 마음에 이 글을 남겨봅니다. 사실 문제 자체는 없긴한데 뭔가 위와 같은 상태가 계속되면 심리적으로 불-편해서 계속 신경이 쓰입니다.\r\n\r\n이것이 언제 어떻게 해결이 될지는 모르겠지만 좀 해결이 됐으면 좋겠습니다. 검색도 잘 되고 하니까 당장에는 검색이 잘 되는 글들을 써서 블로그를 키우는 게 급선무인 것 같긴 합니다. HTML 복습한답시고 HTML 가이드만 작성할 게 아니라 지금 공부하고 있는 것들도 남겨두는 게 좋을 듯 합니다.\r\n\r\n이번 글은 그냥 주저리 주저리 떠드는 글이었습니다. 이 글을 작성한 후에는 사이트맵을 좀 손보기도 하고 좀 더 시도를 해봐야겠습니다. 이번 글은 여기서 마치도록 하고 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"10","yearMonth":"2021-10"}},{"frontMatter":{"id":29,"title":"웹 개발을 위한 HTML 가이드 번외 2편 - 웹과 컴퓨터의 경로(주소)","description":"벌써 10월입니다. 나는 아무것도 안했는데! 정말 부지런하게 살아야겠다는 생각이 팍 들었습니다. 아무튼간에 이번 글은 웹 개발을 위한 HTML 가이드 번외 2편입니다. 저번 글에서 우리는 하이퍼 링크를 구현해주는 태그인 링크 태그 즉 a태그에 대해서 알아봤습니다. 이번 글은 링크 태그와 같은 파일의 경로를 필요로 하는 다른 태그나 훗날 다루게 될 다양한 것들을 대비해서 컴퓨터와 웹의 경로에 대해서 간단하게 짚고 넘어가려고 합니다. 이번 글에서는 로컬 주소와 웹 주소의 차이점을 알아보고 절대경로와 상대경로에 대해서 알아봅니다. 웹이나 컴퓨터에서는 특정한 주소를 디렉토리라고 부릅니다. 주소, 경로, 패스 다 같은 말이죠. 웹에서 페이지들이 사용하는 주소와 컴퓨터에서 폴더와 파일이 사용하는 주소는 다르지만 유사합니다. 웹의 페이지들도 결국에는 어떤 컴퓨터의 폴더에 존재하는 파일들이기에 아주 큰 차이는 없지만 그래도 알아보도록 합시다.","coverImage":"https://drive.google.com/uc?export=view&id=14cJ6BkVN5vmVOxrEYcQwxJ1k3HKtjdkk","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","상대경로","절대경로","로컬 주소","웹 주소","path","경로"],"categories":["가이드","HTML"],"createdAt":1633117440000,"updatedAt":1633166880000,"keywords":[],"drawDate":1633117440000,"display":true,"type":"post"},"slug":"2021-10-02-29-about-path","fullPath":"/post/2021-10-02-29-about-path","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name\r\n} from '@/components/PostComponents';\r\n\r\n<HtmlGuideMessage />\r\n\r\n# 개요\r\n벌써 10월입니다. 나는 아무것도 안했는데! 정말 부지런하게 살아야겠다는 생각이 팍 들었습니다. 아무튼간에 이번 글은 웹 개발을 위한 HTML 가이드 번외 2편입니다.\r\n\r\n저번 글에서 우리는 **하이퍼 링크**를 구현해주는 태그인 **링크 태그** 즉 `a`태그에 대해서 알아봤습니다. 이번 글은 링크 태그와 같은 파일의 경로를 필요로 하는 다른 태그나 훗날 다루게 될 다양한 것들을 대비해서 **컴퓨터와 웹의 경로**에 대해서 간단하게 짚고 넘어가려고 합니다. 이번 글에서는 **로컬 주소와 웹 주소**의 차이점을 알아보고 **절대경로와 상대경로**에 대해서 알아봅니다.\r\n\r\n# 디렉토리\r\n웹이나 컴퓨터에서는 특정한 주소를 **디렉토리**라고 부릅니다. 주소, 경로, 패스 다 같은 말이죠. 웹에서 페이지들이 사용하는 주소와 컴퓨터에서 폴더와 파일이 사용하는 주소는 다르지만 유사합니다. 웹의 페이지들도 결국에는 어떤 컴퓨터의 폴더에 존재하는 파일들이기에 아주 큰 차이는 없지만 그래도 알아보도록 합시다.\r\n\r\n## 로컬 디렉토리\r\n로컬 주소는 윈도우의 경우 드라이브부터 접근을 하죠. C 드라이브나 D 드라이브 같은 것들 말입니다. 컴퓨터 상에서의 경로로써 표기할 때에는 **C:&#8361;**로 표기를 합니다. 그리고 이 의미는 **C 드라이브의 내부**를 가리킵니다. 맥이나 리눅스 같은 유닉스 계열의 OS의 경우에는 **/** 로 시작을 합니다. 루트 디렉토리죠.\r\n\r\n가령 파일의 위치는 드라이브나 루트 디렉토리를 시작으로 내부 폴더들을 표기하고 폴더 내로 들어가면 **/**나 **\\\\(&#8361;)**로 구분을 하고 가장 마지막에 파일을 표기합니다.\r\n\r\n```\r\nF:\\니힐 폴더\\아이유 델루나2.png\r\n/home/nihilncunia/web-coding/Blog/nihilog/code/package.json\r\n```\r\n\r\n이런식으로 말이죠.\r\n\r\n## 웹 디렉토리\r\n웹 디렉토리의 경우엔 드라이브로 시작하지 않습니다. **http** 혹은 **https**라는 프로토콜로 시작합니다. 웹 페이지들은 서버상에서 http 혹은 https 프로토콜로 통신을 하기 때문입니다. 근데 지금은 이 원리 자체는 중요하지 않고 웹 주소는 **https://**로 시작을 합니다. 과거에는 **http://**로 시작하는 주소가 많았는데 요즘은 인증된 페이지가 많아서 **https://**로 시작하는 주소가 더 많습니다.\r\n\r\n프로토콜의 다음에는 **아이피 주소**가 옵니다. 아이피는 **0.0.0.0**과 같은 구조의 숫자들이고 이는 컴퓨터가 가진 일종의 주민등록번호 같은 것이라고 이야기 했던 적이 있습니다. 아이피의 다음에는 포트가 옵니다. 0.0.0.0:**8080** 8080이 바로 포트에 해당하는 숫자죠.\r\n\r\n<P><Strong>http://0.0.0.0:8080</Strong> 이게 세트입니다. 웹 주소는 이렇게 시작을 합니다. 하지만 이렇게 보면 되게 지저분해보이고 어렵죠. 외우기가 어려울 겁니다. 그래서 사람들은 <Strong>도메인</Strong>이라는 것을 만들어냈습니다. 도메인을 통해서 아이피를 대신하게 하고 아이피로 접근한 것과 같은 효과를 낼 수 있게 만들었죠. 그게 오늘날의 웹 사이트들의 주소입니다. <Strong>naver.com</Strong>이나 <Strong>google.com</Strong> 같은 것들이 도메인입니다.</P>\r\n\r\n<P>네이버에 들어가서 주소를 복사하면 <Strong>https://www.naver.com/</Strong> 이렇게 나옵니다. 원래는 저 자리에 아이피가 들어가는 것이죠. 아무튼 주소의 끝에 슬래시가 있습니다. 이는 루트 디렉토리를 의미합니다. 웹 사이트마다 루트 디렉토리가 있습니다.</P>\r\n\r\n**/**는 뒤에 **index.html**이 생략되어 있습니다. 이 부분은 예전에 다룬 적이 있습니다. 그렇다면 루트 디렉토리는 웹 사이트의 홈 페이지를 의미하겠죠. 루트 디렉토리 내에 다른 폴더에 접근하면 **https://주소/폴더/파일** 혹은 **https://주소/폴더** 와 같은 모양이 됩니다.\r\n\r\n로컬 디렉토리나 웹 디렉토리나 폴더로 접근할 때 슬래시 혹은 역슬래시를 사용하는 건 마찬가지인 것이죠.\r\n\r\n웹에 존재하는 웹 사이트들은 호스트 컴퓨터가 공유하고 있는 폴더 내부에 존재하는 파일들로 구성이 되어있습니다. 어떠한 프로젝트를 개발하고 이를 배포하기 위해서는 서버 상에 존재하게끔 만들어야 하기 때문입니다. 다양한 방법으로 서버를 구축하고 실행하고 배포를 하게 되면 그때 여러분의 컴퓨터는 **호스트 컴퓨터**가 되는겁니다.\r\n\r\n```\r\nF:\\nihil\\project1\r\n```\r\n\r\n```\r\nhttp://0.0.0.0:7556/\r\n```\r\n\r\n첫번째와 같은 디렉토리를 서버를 통해 7556 포트로 공유를 하게 되면 두번째와 같은 주소가 됩니다. 포트는 자유입니다. 7556을 좋아해서 예시를 든 것입니다! 아무튼 project1 폴더는 프로젝트 폴더고 이 안에 있는 파일들을 호스팅하는 겁니다. 0.0.0.0은 여러분의 컴퓨터의 아이피가 오게 됩니다.\r\n\r\n# 절대경로와 상대경로\r\n이번 파트는 로컬 디렉토리와 웹 디렉토리가 둘 다 해당되는 부분입니다. 절대경로와 상대경로를 알게 되면 프로그래밍하는데에 있어서 약간의 편리함이 생길겁니다. 파일 같은 것을 다룰 때에 말이죠. 절대경로와 상대경로는 파일을 다루는데에 사용되는 방법입니다. 간단하게 알아보도록 합시다.\r\n\r\n```\r\nC:\\WINDOWS\\system32\r\n```\r\n\r\n위와 같은 디렉토리가 있습니다. cmd 켜면 처음 보이는 디렉토리죠. 저 디렉토리를 절대경로로 표현하면 무엇일까요? 그냥 **C:\\\\WINDOWS\\\\system32** 이겁니다. 같은 주소죠. **절대경로는 최상위 디렉토리부터 접근**하게 됩니다. 디렉토리를 깊게 들어가게 되면 절대경로도 길어지겠죠.\r\n\r\n위의 디렉토리를 **상대경로**로 표현하면 **./** 입니다. 아주 간단하죠. 이 표기에서 **.**은 현재 디렉토리를 의미합니다. **/**는 내부를 의미하는거죠. 그래서 합치면 현재 디렉토리의 내부라는 의미입니다. 상대경로로 상위 폴더를 가리키는 방법도 간단합니다. **../**라고 하면 됩니다. **C:\\\\WINDOWS**와 같습니다.\r\n\r\n이 상대경로를 잘 기억해두세요. 앞으로 링크를 할 때 같은 파일을 링크 할 때도 있을 건데 그때 계속 사용하게 될 겁니다.\r\n\r\n<Line />\r\n\r\n이번 글의 내용은 여기까지입니다. 이번 글에서는 네가지를 알아봤습니다. 로컬 디렉토리와 웹 디렉토리에 대해서 알아봤고 절대경로와 상대경로에 대해서 알아봤습니다. 특히나 상대경로는 앞으로 많이 사용하게 될 디렉토리 접근 방법이라서 기억해두는 게 정신 건강에 이롭습니다.\r\n\r\n이번 글은 여기서 마치도록 하겠습니다. 다음 글부터는 다시 새로운 태그들을 알아볼 겁니다. 텍스트와 관련된 태그들을 차례대로 알아볼 것인데 수가 많기 때문에 많은 파트로 나뉠 것 같습니다. 그럼 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"10","yearMonth":"2021-10"}},{"frontMatter":{"id":28,"title":"웹 개발을 위한 HTML 가이드 14편 - 링크 태그(a)","description":"이번 글은 웹 개발을 위한 HTML 가이드 14편입니다. 시간이 참 오래 흘렀는데 제가 게을러서 14편 밖에 작성하질 못했네요. 아무튼간에 이제는 조금 더 자주 가이드를 작성하도록 하고, 저번 두 글 Visual Studio Code 사용하기 VSCode 추천 확장 프로그램를 통해서 우리는 편집기를 메모장에서 vscode로 교체했습니다. 간단한 기능들과 확장 프로그램을 알려드렸으니 요령껏 잘 사용하시면 되겠습니다. 이번 글에서는 저번 글에 예고했던대로 웹 페이지끼리 서로 연결해주는 하이퍼 링크를 만들 수 있는 링크 태그에 대해서 알아볼 겁니다. 링크는 a태그로 만들 수 있습니다. 웹은 하이퍼링크로 연결되어 있는 웹 페이지들의 세상이라고 했었죠. 그렇기 때문에 링크는 그야말로 웹의 꽃이자 모든 것이라고 해도 과언이 아닙니다. 그럼 이제 이 링크 태그에 대해서 제대로 알아보도록 합시다.","coverImage":"https://drive.google.com/uc?export=view&id=1esDsKjF27YIDtIqt4Fm_8P5gcjqNPGop","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","링크 태그","a 태그","하이퍼 링크","링크"],"categories":["가이드","HTML"],"createdAt":1632505740000,"updatedAt":1632505740000,"keywords":[],"drawDate":1632505740000,"display":true,"type":"post"},"slug":"2021-09-25-01-link-tag","fullPath":"/post/2021-09-25-01-link-tag","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name\r\n} from '@/components/PostComponents';\r\n\r\n<HtmlGuideMessage />\r\n\r\n# 개요\r\n이번 글은 웹 개발을 위한 HTML 가이드 14편입니다. 시간이 참 오래 흘렀는데 제가 게을러서 14편 밖에 작성하질 못했네요. 아무튼간에 이제는 조금 더 자주 가이드를 작성하도록 하고, 저번 두 글 [Visual Studio Code 사용하기](/post/2021-09-13-01-vscode-install) [VSCode 추천 확장 프로그램](/post/2021-09-23-01-vscode-extension)를 통해서 우리는 편집기를 메모장에서 vscode로 교체했습니다. 간단한 기능들과 확장 프로그램을 알려드렸으니 요령껏 잘 사용하시면 되겠습니다.\r\n\r\n이번 글에서는 저번 글에 예고했던대로 웹 페이지끼리 서로 연결해주는 **하이퍼 링크**를 만들 수 있는 **링크 태그**에 대해서 알아볼 겁니다. 링크는 `a`태그로 만들 수 있습니다. 웹은 하이퍼링크로 연결되어 있는 웹 페이지들의 세상이라고 했었죠. 그렇기 때문에 링크는 그야말로 **웹의 꽃이자 모든 것**이라고 해도 과언이 아닙니다.\r\n\r\n그럼 이제 이 링크 태그에 대해서 제대로 알아보도록 합시다.\r\n\r\n# 링크 태그\r\n<P>위에서 언급했듯이 <Strong>링크 태그</Strong>(이하 <Code>a</Code>태그)는 <Strong>웹에서 중요한 위치</Strong>를 차지하고 있습니다. <Strong>링크가 없으면 웹은 의미가 없어지기 때문입니다.</Strong> 그만큼 중요한 역할을 합니다. 그래서 최대한 빨리 <Code>a</Code>태그에 대해서 다루고 싶었습니다. 어떻게 해야 처음 HTML을 접하는 분들이 이해하기 쉽게 설명할 수 있을지를 고민했는데 그게 잘 될는지는 모르겠습니다. <Bold>이 글이 잘 이해가 안된다면 설명을 못한 저의 문제입니다. 저의 공부가 덜 된 것이지.. 여러분의 문제는 아닙니다.</Bold></P>\r\n\r\n`a`태그는 일반적으로 **html 페이지과 html 페이지를 연결**해주는 역할을 합니다. 웹 상에 존재하는 그 어떤 html 파일과도 연결이 가능하기 때문에 이론상 유튜브에서 네이버로도 점프가 가능합니다. <Bold>물론 유튜브에는 네이버로 이동하는 링크가 없습니다!</Bold>\r\n\r\n`a`태그는 여는 태그와 닫는 태그로 구성이 되어있습니다.\r\n\r\n## 하이퍼 링크\r\n`a`태그의 유일하면서도 강력한 기능은 바로 **하이퍼 링크를 구현하는 것**에 있습니다. 하이퍼 링크는 위에서 계속 설명했던 것처럼 **html 페이지와 html 페이지를 연결하는 기능**입니다. 중요한 점은 하이퍼 링크는 기본적으로는 쌍방향이 아니라 단방향이라는 것입니다. A지점에서 B지점으로 이동을 한다고 치면 B지점으로 이동하고 싶은 A지점이 일방적으로 접근하는 것입니다.\r\n\r\n하지만 B지점에도 A지점으로 통하는 하이퍼 링크가 있다면 이 경우엔 단방향이 아니라 쌍방향이 되겠죠. 왔다가 갔다가를 반복할 수 있으니까요. 이런 쌍방향 링크들은 웹 사이트 하위에 있는 웹 페이지들에서 나타납니다. 하이퍼 링크는 없는 곳이 없습니다. 웹이라면 어디에나 하이퍼 링크가 존재합니다.\r\n\r\n`a`태그를 이용하면 내 페이지(사이트)에서 다른 웹 사이트로 넘어가거나 내 페이지끼리 왔다 갔다 할 수 있습니다. 그럼 이제 본격적으로 어떻게 사용하는 것인지 알아보도록 합시다.\r\n\r\n## 내 페이지에서 다른 웹 사이트 연결하기\r\n<P>여러분의 프로젝트 폴더에서 연습할 파일을 아무거나 만들어봅시다. 저는 작업 폴더 안에 training 이라는 폴더를 하나 만들어 그 안에 <Name>link.html</Name> 이라고 이름을 지었습니다. 전에 만들었던 <Name>index.html</Name>은 실전 연습을 할 때에 건드려볼 겁니다. 아무튼 이 안에다가 <Code>a</Code>태그를 연습해봅시다.</P>\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1>아이유</h1>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n`div`태그를 하나 만들고 그 안에 `h1`태그와 `p`태그를 넣었습니다. 저는 아이유라는 제목에 **링크**를 달고 싶어졌습니다. 저는 어쩔 수 없는 아이유 신자이기 때문에 아이유에 대한 신앙을 더 널리 퍼뜨리고 싶거든요. 이럴 때 사용하는 게 바로 `a`태그인 겁니다. 넣어봅시다.\r\n\r\n구글에서 아이유를 검색했을 때 나오는 검색 결과 페이지를 제목에 링크해볼겁니다. 여러분은 아무 제목을 적어도 상관 없고 그냥 아무 사이트를 연결해도 상관 없습니다. 저는 그냥 이게 하고 싶었습니다.(?)\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"https://www.google.com/search?q=%EC%95%84%EC%9D%B4%EC%9C%A0&oq=%EC%95%84%EC%9D%B4%EC%9C%A0&aqs=chrome..69i57j69i64l2j69i60j69i61l2j0i433i512l2&sourceid=chrome&ie=UTF-8\">아이유</a></h1>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n![아이유를 검색한 결과 페이지를 링크했다.](https://drive.google.com/uc?export=view&id=1ZsWk03JHV1n4nC8ReDfPdc-pHEZQJj0h)\r\n\r\n`a`태그에는 기본적으로 들어가야 하는 속성이 있습니다. 바로 `href` 입니다. 이 속성의 값으로는 **웹 상의 주소**가 들어갑니다. 웹 페이지와 웹 페이지를 연결하는거니까 아주 당연한 것이겠죠. 아무튼 구글 검색 결과를 넣어봤습니다.\r\n\r\n<P>링크가 적용되면 기본적으로 텍스트의 색이 파랗게 변하고 밑줄이 생깁니다. 이 디자인은 언제든지 바꿀 수 있습니다.<Gray>(CSS를 강조하는 이유는 익숙해지라는 차원에서 입니다.)</Gray> 그런데 저는 이미 방문을 했던 페이지라서 보라색으로 뜨네요. 그럼 이제 저장을 하고 라이브 서버를 켜봅시다. 제목에 건 링크를 클릭하면 그 페이지로 넘어가는걸 볼 수 있습니다.</P>\r\n\r\n축하합니다! 여러분은 최초로 링크를 구현했습니다!\r\n\r\n## 내 페이지에서 다른 내 페이지와 연결하기\r\n링크는 다른 웹 사이트의 페이지 뿐만 아니라 **우리가 만든 페이지와도 연결이 가능**합니다. 단 현재상으로는 **라이브서버를 켰을 때에만 가능**한 방법입니다. 그 이유는 아직 우리는 서버에 파일을 올리지도 않았고 그런 방법도 모르기 때문이죠. 웹 상의 모든 페이지들은 전부가 서버 컴퓨터에 올라간 파일들이라는 걸 잊으면 안됩니다.\r\n\r\n<P>아무튼 라이브서버를 통해서 우리의 프로젝트 폴더가 웹 상에 일시적으로나마 존재하게끔 만들어서 링크를 테스트해볼 수 있습니다. 저는 <Name>link.html</Name> 파일이 있는 폴더의 안에 또 다른 파일을 만들었습니다. 파일 이름은 <Name>link2.html</Name> 이라고 지었습니다.</P>\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"https://www.google.com/search?q=%EC%95%84%EC%9D%B4%EC%9C%A0&oq=%EC%95%84%EC%9D%B4%EC%9C%A0&aqs=chrome..69i57j69i64l2j69i60j69i61l2j0i433i512l2&sourceid=chrome&ie=UTF-8\">아이유</a></h1>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n<P>위와 같았던 코드를 아래처럼 바꿨습니다. 일단 <Code>href</Code>속성의 값을 비워뒀고 <Code>p</Code>태그를 없앴습니다. <Code>p</Code>태그는 <Name>link2.html</Name>로 옮겼습니다.</P>\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"\">아이유</a></h1>\r\n</div>\r\n```\r\n\r\n```html file=link2.html\r\n<div>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n파일을 두개로 쪼갠 이유는 제목을 클릭하면 설명이 나오게끔 하기 위함입니다. 제 파일에서 제 파일로 연결을 하는거죠. 제 파일에서 다른 파일로 연결을 할 때에도 주소를 적어야 합니다. 이때 나오는 개념이 **절대경로**과 **상대경로**입니다.\r\n\r\n하지만 이건 지금 다루기엔 너무 복잡하니까 다음 글에서 제대로 다뤄보도록 하고 아주 간단하게만 다뤄보자면, 예전에 작성했던 [index.html에 대해](/post/2021-09-04-01-filename-index) 글을 보면 프로젝트 폴더의 최상위 폴더는 웹 상에서 **/**로 표현한다고 했었습니다. 이 슬래시로 시작하는 주소는 **절대경로**입니다. 절대경로는 루트폴더에서부터 접근합니다.\r\n\r\n<Message color='b'>\r\n  <p>루트 폴더는 프로젝트 폴더의 <Strong>최상위 폴더</Strong>를 의미합니다!</p>\r\n</Message>\r\n\r\n상대경로는 루트폴더에서부터 접근하는 게 아니라 특정 파일을 기점으로 접근합니다. <Name>link.html</Name>과 <Name>link2.html</Name>은 둘 다 training 폴더 안에 있습니다. 같은 폴더 안에 있는 파일에 접근하려면 **./**로 시작합니다. 상위 폴더에 있는 파일에 접근하려면 **../**로 시작합니다. 상위 폴더의 상위 폴더라면 **../../**로 접근하겠죠.\r\n\r\n제 프로젝트 폴더의 기준으로 절대경로와 상대경로를 적용한 주소는 아래와 같습니다.\r\n\r\n* **절대경로:** /training/link2.html\r\n* **상대경로:** ./link2.html\r\n\r\n이걸 a태그에 적용하면 아래와 같겠죠.\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"./link2.html\">아이유</a></h1>\r\n  <!-- <h1><a href=\"/training/link2.html\">아이유</a></h1> 절대경로일 경우 -->\r\n</div>\r\n```\r\n\r\n이렇게 하고 저장한 후에 라이브서버에서 실행해보면 설명 페이지로 잘 넘어가게 됩니다. 하지만 뭔가 아쉬운 점이 있죠. 어떤 웹 사이트를 보면 링크를 클릭했을 때 **새 창**에서 띄우던데 우리도 그렇게 할 수 없을까요? 그래서 존재하는 게 바로 아래와 같은 속성들입니다.\r\n\r\n## 링크 태그의 다른 속성\r\n`a`태그에는 아주 많은 속성들이 있지만 기본적으로 알면 좋은 두개의 속성을 다뤄보도록 하겠습니다.\r\n\r\n### target 속성\r\n`target`속성은 쉽게 말해 **현재 페이지에서 링크를 띄우느냐 새로운 창이나 탭에서 링크를 띄우느냐**를 결정하는 속성입니다. 값은 총 4개가 있지만 우리는 그냥 두개만 알면 됩니다. **_self**과 **_blank**입니다. **_self**는 현재 페이지에서 띄우게 합니다. 기본값입니다. `target`속성을 명시하지 않아도 기본적으로 실행된다는 것입니다. 그래서 새 창으로 띄우려면 **_blank**를 값으로 넣으면 됩니다.\r\n\r\n```html\r\n<a href=\"#\" target=\"_blank\">블라블라</a>\r\n```\r\n\r\n### rel 속성\r\n`rel`속성은 **relationship**의 약자입니다. 현재 페이지와 링크될 페이지간의 관계를 설정하는 것인데, `target`속성을 사용할 때에 혹 있을지 모르는 해커의 **외부적인 접근을 방지**해야 하는데 이를 수행하기 위한 속성이기도 합니다. `target=\"_blank\"`를 사용할 때에는 `rel=\"noreferrer noopener\"`를 함께 작성해주면 됩니다.\r\n\r\n이외 에도 다양한 값들이 있는데, 나중에 여러분의 지식이 더 커지면 그때 공부해도 될 겁니다.\r\n\r\n```html\r\n<a href=\"#\" target=\"_blank\" rel=\"noreferrer noopener\">블라블라</a>\r\n```\r\n\r\n# 실전 연습\r\n그럼 이제 문단 태그를 배울 때에 만들었던 <Name>index.html</Name> 파일을 준비해봅시다. 지금까지 알아본 것을 바탕으로 우리의 프로젝트를 발전 시켜 보는겁니다.\r\n\r\n우리의 프로젝트는 아래처럼 생겼죠.\r\n\r\n```html file=index.html\r\n<h1>웹 개발의 3요소</h1>\r\n<h2>HTML</h2>\r\n<p>HTML은 웹의 뼈대를 만들어주는 기능을 하는 마크업 언어입니다.</p>\r\n<h2>CSS</h2>\r\n<p>CSS는 HTML로 만든 뼈대에 피부를 만들어주고 화장을 시켜주는 스타일 시트 언어입니다.</p>\r\n<h2>JavsScript</h2>\r\n<p>자바스크립트는 HTML과 CSS를 동적으로 제어할 수 있는 웹의 뇌와 같은 언어입니다.</p>\r\n```\r\n\r\n`h2`태그들에 링크를 넣고 싶습니다. 각각의 키워드를 구글에 검색한 결과를 링크하려고 합니다. 아래처럼 하면 되겠죠.\r\n\r\n```html file=index.html\r\n<h1>웹 개발의 3요소</h1>\r\n<h2><a href=\"https://bit.ly/3lXTSYW\" target=\"_blank\" rel=\"noopener noreferrer\">HTML</a></h2>\r\n<p>HTML은 웹의 뼈대를 만들어주는 기능을 하는 마크업 언어입니다.</p>\r\n<h2><a href=\"https://bit.ly/3u9M22j\" target=\"_blank\" rel=\"noopener noreferrer\">CSS</a></h2>\r\n<p>CSS는 HTML로 만든 뼈대에 피부를 만들어주고 화장을 시켜주는 스타일 시트 언어입니다.</p>\r\n<h2><a href=\"https://bit.ly/39BnSnM\" target=\"_blank\" rel=\"noopener noreferrer\">JavsScript</a></h2>\r\n<p>자바스크립트는 HTML과 CSS를 동적으로 제어할 수 있는 웹의 뇌와 같은 언어입니다.</p>\r\n```\r\n\r\n`href`속성에는 링크할 페이지의 주소를 넣는 거였죠. 구글 검색결과 페이지의 주소가 너무 길어서 줄였습니다. 새 창에서 뜨게 하기 위해서 `target=\"_blank\"` 속성을 넣었고 같이 따라오는 `rel=\"noopener noreferrer\"` 속성은 외부의 악의적인 접근을 방지하기 위해 넣었습니다.\r\n\r\n![우리의 프로젝트는 좀 더 발전했다.](https://drive.google.com/uc?export=view&id=1mRWGfvGJTB_zw2L2V2tEXjYj0RNcNcY6)\r\n\r\n<P>이렇게 하면 우리의 프로젝트는 좀 더 발전했습니다! 이번 글의 실전 연습에 대한 부분은 깃허브 <A href='https://github.com/nihil-programming-guide/web-tuto/tree/master/HTML' type='normal'>web-tuto</A>에 기록해놨습니다.</P>\r\n\r\n<Line />\r\n\r\n가이드를 작성하다보니 글이 아주 길어졌습니다. 하지만 내용은 그다지 어려운 부분은 없을겁니다. 절대경로나 상대경로 부분은 좀 살짝 머리가 아플 수 있는데 다음 글에서 제대로 다뤄볼 예정입니다. 이번 글은 여기까지입니다. 이번 글에서는 `a`태그에 대해서 알아봤고 우리의 기술은 조금 더 늘었습니다.\r\n\r\n그럼 이번 글은 여기서 마치도록 하고 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"09","yearMonth":"2021-09"}},{"frontMatter":{"id":27,"title":"웹 개발을 위한 HTML 가이드 13편 - VSCode 추천 확장 프로그램","description":"저번 글에서는 vscode의 설치와 사용에 대해서 다뤘습니다. 이번 글에서는 vscode에서 사용할 수 있는 확장 프로그램에 대해서 알아보려고 합니다. 정확히는 확장 프로그램 추천입니다. vscode는 가볍지만 확장 프로그램을 통해서 얼마든지 원하는 기능과 환경을 구축할 수 있다는 특징을 갖고 있습니다. 이러한 특징 덕에 WebStorm처럼은 아니지만 IDE에 버금가는 강력한 기능을 갖게 만들 수 있습니다. 코딩, 프로그래밍을 처음 하시는 분들에게 vscode를 추천한 것은 사람들이 많이 쓰기 때문도 있지만 이런 특징 때문도 있다는 점을 알고 계시면 좋겠습니다. 자, 그럼 웹 개발을 위한 HTML 가이드 13편을 시작하도록 합시다. vscode에는 정말 많은 확장 프로그램이 존재합니다. 그리고 이러한 것은 많은 사람들이 사용하고 있는 vscode라서 가능한 결과입니다. HTML과 관련된 확장 프로그램도 정말 다양하게 존재합니다. 그 중에서 가장 필요한 것들을 골라서 소개할 생각입니다. 저번 글에서 이미 확장 프로그램을 설치하는 방법에 대해서 다뤘기 때문에 다시 설명하지는 않을 겁니다.","coverImage":"https://drive.google.com/uc?export=view&id=1vDJV-wy4ibW6Y3sfl1khXkgokBtDpzrm","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","비주얼 스튜디오 코드","VS Code"],"categories":["가이드","HTML"],"createdAt":1632385800000,"updatedAt":1632385800000,"keywords":[],"drawDate":1632385800000,"display":true,"type":"post"},"slug":"2021-09-23-01-vscode-extension","fullPath":"/post/2021-09-23-01-vscode-extension","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name\r\n} from '@/components/PostComponents';\r\n\r\n<HtmlGuideMessage />\r\n\r\n# 개요\r\n저번 글에서는 **vscode의 설치와 사용**에 대해서 다뤘습니다. 이번 글에서는 **vscode에서 사용할 수 있는 확장 프로그램**에 대해서 알아보려고 합니다. 정확히는 확장 프로그램 추천입니다. vscode는 가볍지만 확장 프로그램을 통해서 **얼마든지 원하는 기능과 환경을 구축할 수 있다는 특징**을 갖고 있습니다.\r\n\r\n이러한 특징 덕에 **WebStorm**처럼은 아니지만 **IDE에 버금가는 강력한 기능**을 갖게 만들 수 있습니다. 코딩, 프로그래밍을 처음 하시는 분들에게 vscode를 추천한 것은 사람들이 많이 쓰기 때문도 있지만 이런 특징 때문도 있다는 점을 알고 계시면 좋겠습니다.\r\n\r\n자, 그럼 웹 개발을 위한 HTML 가이드 13편을 시작하도록 합시다.\r\n\r\n# HTML 개발을 위한 확장 프로그램\r\nvscode에는 정말 많은 확장 프로그램이 존재합니다. 그리고 이러한 것은 많은 사람들이 사용하고 있는 vscode라서 가능한 결과입니다. **HTML과 관련된 확장 프로그램**도 정말 다양하게 존재합니다. 그 중에서 **가장 필요한 것들을 골라서 소개**할 생각입니다. 저번 글에서 이미 확장 프로그램을 설치하는 방법에 대해서 다뤘기 때문에 다시 설명하지는 않을 겁니다.\r\n\r\n확장 프로그램을 설치하는 방법이 잘 기억이 나지 않으신다면 [Visual Studio Code 사용하기](/post/2021-09-13-01-vscode-install) 글을 참고하시기 바랍니다.\r\n\r\n## Auto Complete Tag\r\n![Auto Complete Tag 확장 프로그램](https://drive.google.com/uc?export=view&id=19swUqhmw3Vfb618i63TyZ7ZHARlSrIVN)\r\n\r\n첫번째로 소개할 확장 프로그램은 **Auto Complete Tag**입니다. 이 확장 프로그램은 **태그를 직접 입력할 때에 태그를 자동으로 닫아**주는 **Auto Close Tag** 확장 프로그램과 여는 태그와 닫는 태그 중에서 한가지를 수정할 때에 **다른 쪽도 수정되게끔 만들어**주는 **Auto Rename Tag** 확장 프로그램을 동시에 설치해주는 확장 프로그램입니다.\r\n\r\n이게 설치되어 있으면 HTML 코딩을 할 때 정말 편해집니다.\r\n\r\n## htmltagwrap\r\n![htmltagwrap 확장 프로그램](https://drive.google.com/uc?export=view&id=1fBEZ-vJv39AcK8JIWomsxq9ZLISzf5Ac)\r\n\r\n<P>두번째는 <Strong>특정 텍스트를 선택(범위 지정)</Strong>한 상태나 <Strong>특정 태그를 선택한 상태</Strong>에서 <Kbd>ALT + W</Kbd>를 누르면 새로운 태그로 감싸주는 기능을 제공하는 확장 프로그램입니다. 코딩을 하다가 태그들을 감싸줄 부모 태그가 필요할 때에 자식 태그가 될 태그를 선택하고 단축키를 누르면 부모 태그가 만들어지는 편리한 기능을 제공합니다.</P>\r\n\r\n부모 태그가 만들어지면 `p`태그인데 이름은 바꿔주면 됩니다. 여러번 사용해보면 감이 오실 겁니다.\r\n\r\n## CSS 관련 확장 프로그램\r\n### HTML CSS Support\r\n![HTML CSS Support 확장 프로그램](https://drive.google.com/uc?export=view&id=11LJjRw2XESjgj5Sc8ZG4XGl0JxPXM3JT)\r\n\r\n세번째는 HTML과 CSS를 사용하기 편하게 **자동완성 기능을 제공**해주는 확장 프로그램입니다. **html 파일에 css 파일이 연결되어 있을 경우**에 id 값이나 class 값이 이미 정의되어 있다면 html 코딩을 할 때에 **id나 class가 필요할 때** 미리 정의된 녀석들을 **추천**해주는 기능을 합니다. 지금 당장은 쓰지 않겠지만 미리 설치해둔다면 좋을 것 같습니다.\r\n\r\n### IntelliSense for CSS class names in HTML\r\n![IntelliSense for CSS class names in HTML 확장 프로그램](https://drive.google.com/uc?export=view&id=1F94Pn3idrn0YwP05nkNXvlDqGtZqNvrH)\r\n\r\n네번째로 소개할 확장 프로그램은 **IntelliSense for CSS class names in HTML**입니다. html 파일에 연결된 css 파일에 정의된 **클래스들을 미리 읽어**들여서 **클래스를 지정해줄 때에 편리한 기능을 제공**해줍니다. 위에 있는 확장 프로그램과는 또 다른 강력한 기능입니다.\r\n\r\n앞으로 HTML과 CSS를 자주 사용하게 되는데 CSS에서는 **클래스를 자주 사용**하게 됩니다. 디자인을 입힐 때에는 클래스를 주로 사용하거든요. 아무튼 이것도 설치해두면 앞으로 도움이 될 겁니다. 지금 당장 쓰지는 않더라도 말이죠.\r\n\r\n### CSS Peek\r\n![CSS Peek 확장 프로그램](https://drive.google.com/uc?export=view&id=10AecQ-lRpJTLLxiOtnzLwx5bPuiFOfrv)\r\n\r\n다섯번째 확장 프로그램은 HTML과 CSS를 함께 사용할 때에 html 파일에서 지정한 **클래스나 아이디**의 스타일을 **확인할 때**에 편리한 기능을 제공해줍니다. **CSS Peek**이라는 확장 프로그램입니다. 아무 태그에 클래스나 아이디를 지정하고 지정한 클래스나 아이디를 우클릭하면 **정의로 이동**, **참조로 이동**과 같은 메뉴가 나타납니다. 정의로 이동을 누르면 **연결된 css 파일의 해당 클래스로 넘어갈 수** 있습니다.\r\n\r\n심지어는 html 파일 내에서 **css 파일의 일부분을 팝업해서 스타일을 편집할 수도** 있습니다. 이건 나중에 CSS 가이드를 할 때에 자세하게 다뤄보도록 하겠습니다. 결론적으로 귀찮게 파일을 뒤적거리지 않아도 된다는 의미죠. 하지만 가끔 먹통이 될 때도 있어서 이 점은 참고하시면 되겠습니다.\r\n\r\n## Live Server\r\n![Live Server 확장 프로그램](https://drive.google.com/uc?export=view&id=19666Tcf1u4lltaYbdN1HIfFlV4-XqkOb)\r\n\r\n우리는 앞으로 공부를 하면서 html 파일을 작성할 때에 **결과물을 미리 보고 싶을 때**가 있을 겁니다. 그럴 때에 사용하는 확장 프로그램 기능이 바로 **Live Server**입니다. **서버를 띄워서 라이브로 결과물을 확인하면서 코딩**을 할 수 있습니다. **자동으로 새로고침**이 되기 때문에 개발자는 번거롭게 새로고침을 할 필요가 없습니다.\r\n\r\n이 확장 프로그램을 설치하면 vscode의 하단에 **Go Live라는 버튼**이 생깁니다. 버튼이 없다면 html 파일에서 우클릭을 하고 **Open with Live Server**를 클릭하면 됩니다. 로컬호스트 **5500 포트**로 서버가 열립니다.\r\n\r\n<Line />\r\n\r\n지금까지 간단하게 HTML에 필요한 확장 프로그램을 소개해봤습니다. 위에서 소개한 확장 프로그램 이외에도 **다양한 확장 프로그램이 있습니다.** 여러분의 입맛에 맞게 살펴보시면 될 것 같습니다. 이 가이드는 HTML 가이드인데 CSS 관련된 확장 프로그램도 같이 추천한 이유는 어차피 나중에 써야하기 때문입니다. 소개한 확장 프로그램이 많지는 않지만 이정도면 HTML을 개발하는데에 있어서 불편함은 없을 것 같습니다.\r\n\r\n이번 글은 여기까지입니다. 다음 글은 **링크 태그**에 대해서 알아보도록 합시다.\r\n","date":{"year":"2021","month":"09","yearMonth":"2021-09"}}],"notices":[{"frontMatter":{"id":22,"title":"블로그 이름 변경","description":"2021년 7월 14일부로 이 블로그의 이름이 니힐 블로그에서 니힐로그로 변경되었습니다. 이름을 바꾼 이유는 예전에 만들어놓은 티스토리 블로그의 이름과 똑같기 때문에 문제가 생길 것 같아서 바꿨습니다. 이참에 그 블로그도 완전히 정리를 해서 문제가 없게 해야겠습니다. 이름을 변경하면서 여러가지 부분을 수정하기도 했고 지금 블로그에 쓰이는 로고들도 살짝 교체했습니다. 문제는 썸네일인데 썸네일은 하나 하나 바꾸는 게 힘들어서 그냥 두기로 했습니다. 이 공지부터 새로운 이름이 적용된 썸네일을 이용할 생각입니다.","coverImage":"https://drive.google.com/uc?export=view&id=1ig8LXIQV8ZoKTAWz7DQE5h07ovsEXS4x","tags":[],"categories":[],"createdAt":1626205980000,"updatedAt":1626205980000,"keywords":[],"drawDate":-2211786000000,"display":true,"type":"notice"},"slug":"2021-07-14-01-blog-name-change","fullPath":"/notice/2021-07-14-01-blog-name-change","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark\r\n} from '@/components/PostComponents';\r\n\r\n**2021년 7월 14일**부로 이 블로그의 이름이 **니힐 블로그**에서 **니힐로그**로 변경되었습니다. 이름을 바꾼 이유는 예전에 만들어놓은 티스토리 블로그의 이름과 똑같기 때문에 문제가 생길 것 같아서 바꿨습니다. 이참에 그 블로그도 완전히 정리를 해서 문제가 없게 해야겠습니다.\r\n\r\n이름을 변경하면서 여러가지 부분을 수정하기도 했고 지금 블로그에 쓰이는 로고들도 살짝 교체했습니다. 문제는 썸네일인데 썸네일은 하나 하나 바꾸는 게 힘들어서 그냥 두기로 했습니다. 이 공지부터 새로운 이름이 적용된 썸네일을 이용할 생각입니다.\r\n\r\n코로나가 극성이고 한여름이라 상당히 더운 하루하루라서 포스팅은 쉬고 있고 이런 저런 코드만 만지고 있었습니다. 블로그의 코드도 만졌고 다른 프로젝트들도 진행하고 있었는데 이게 점점 더워져서 화딱지가 나려고 하는군요. 그래도 아무것도 안하고 있는 건 아니고 잘 살아가고 있는 것 같아 뿌듯하네요. 이제부터 천천히 포스트를 하나 하나 작성해 나가야겠습니다.\r\n","date":{"year":"2021","month":"07","yearMonth":"2021-07"}},{"frontMatter":{"id":1,"title":"블로그를 본격적으로 시작합니다.","description":"Next.js로 직접 블로그로 만들겠다고 이런 저런 정보를 찾아서 백지부터 시작해서 작업을 진행한 지 2주 정도 흘렀습니다. 이제는 블로그가 모양을 갖추어서 슬슬 본격적으로 포스팅을 해도 상관 없을 것 같다고 판단하고, 블로그를 제대로 시작하려합니다. 이 블로그는 프로그래밍을 중점으로 컨텐츠를 채워나갈 것이고 그 컨텐츠들은 연습이나 복습차원에서 진행하는 프로그래밍 언어 가이드가 될 것 같습니다.","coverImage":"https://drive.google.com/uc?export=view&id=1iZz2aCAF4PX0gy_757GpYf8LMnQxk5vi","tags":[],"categories":[],"createdAt":1619932140000,"updatedAt":1619932140000,"keywords":[],"drawDate":-2211786000000,"display":true,"type":"notice"},"slug":"2021-05-02-01-blog-begins","fullPath":"/notice/2021-05-02-01-blog-begins","content":"\r\nimport {\r\n  A, Bold, Char, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike\r\n} from '@/components/PostComponents';\r\n\r\n**Next.js**로 직접 블로그로 만들겠다고 이런 저런 정보를 찾아서 백지부터 시작해서 작업을 진행한 지 2주 정도 흘렀습니다. 이제는 블로그가 모양을 갖추어서 슬슬 본격적으로 포스팅을 해도 상관 없을 것 같다고 판단하고, 블로그를 제대로 시작하려합니다. 이 블로그는 프로그래밍을 중점으로 컨텐츠를 채워나갈 것이고 그 컨텐츠들은 연습이나 복습차원에서 진행하는 프로그래밍 언어 가이드가 될 것 같습니다.\r\n\r\n물론, 프로그래밍이 아니더라도 일본어 컨텐츠나 게임에 관련된 컨텐츠들도 다룰 예정입니다. 사람이 항상 공부만 하고 있을 수는 없는 노릇이죠. 아무튼 처음으로 직접 블로그의 곳곳을 구현해봤는데 정말 감회가 새로운 작업이었고 이 블로그에는 많은 애착이 갈 것 같습니다. 이번 작업을 하면서 새로이 알게 된 것들도 있고 확실히 재밌는 작업이었습니다. 이제부터 천천히 포스트를 작성할 예정이고, 더 구현해야 하는 기능들도 있지만, 천천히 살펴보면 될 듯 합니다.\r\n\r\n이번에 블로그를 만들면서 마크다운 문법으로 포스트를 작성할 수 있도록 만들어놓았기 때문에 포스트 작성이 상당히 편리해진만큼, 앞으로 다양한 컨텐츠를 가지고 포스트를 작성해보도록 하고, 약 다섯 번은 운영했었던 블로그를 또 다시 이렇게 운영하게 될 줄은 몰랐지만, 활기차게 새로운 시작을 해보려고 합니다.\r\n\r\n누가 보게 될 지는 모르지만 그거랑 상관없이 글은 천천히 작성해야겠습니다.\r\n","date":{"year":"2021","month":"05","yearMonth":"2021-05"}}]},"__N_SSG":true}
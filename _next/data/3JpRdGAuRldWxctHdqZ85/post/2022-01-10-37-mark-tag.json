{"pageProps":{"post":{"frontMatter":{"id":37,"title":"웹 개발을 위한 HTML 가이드 21편 - 하이라이트 태그","description":"이번 글은 웹 개발을 위한 HTML 가이드 21편입니다. 이번 글의 주제는 하이라이트 태그입니다. 우리는 간혹 어떤 페이지 내에서 그 페이지와 연관이 있는 단어나 내용을 강조하고 싶을 때가 있습니다. 이 연관성에 초점을 두고 사용하는 태그가 바로 하이라이트를 위한 태그입니다. 이번에 알아볼 태그는 바로 mark태그입니다. mark태그의 기본적인 디자인은 노란색 배경입니다. 마치 형광펜으로 그은 것처럼 표시가 되어있죠. 그래서 하이라이트라고 하는 겁니다. mark태그는 HTML 5에서 처음 등장했습니다. 사용자들에게 원하는 부분을 찾는 수고를 덜하게끔 하기 위해서 하이라이트를 통해 표시를 할 때 사용합니다.","coverImage":"https://drive.google.com/uc?export=view&id=1noFRwYG_XT1AVqzTmbo20PjyamI8MC5Y","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","mark 태그","하이라이트 태그"],"categories":["가이드","HTML"],"createdAt":1641762607000,"updatedAt":1641762607000,"keywords":[],"drawDate":1641762607000,"display":true,"type":"post"},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      img: \"img\",\n      p: \"p\",\n      strong: \"strong\"\n    }, _provideComponents(), props.components), {HtmlGuideMessage, HTMLTextPosts, P, Mark, Strong, Code, Line} = _components;\n    if (!Code) _missingMdxReference(\"Code\", true);\n    if (!HTMLTextPosts) _missingMdxReference(\"HTMLTextPosts\", true);\n    if (!HtmlGuideMessage) _missingMdxReference(\"HtmlGuideMessage\", true);\n    if (!Line) _missingMdxReference(\"Line\", true);\n    if (!Mark) _missingMdxReference(\"Mark\", true);\n    if (!P) _missingMdxReference(\"P\", true);\n    if (!Strong) _missingMdxReference(\"Strong\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(HtmlGuideMessage, {}), \"\\n\", _jsx(HTMLTextPosts, {}), \"\\n\", _jsx(_components.h1, {\n        id: \"제목\",\n        children: \"제목\"\n      }), \"\\n\", _jsxs(P, {\n        children: [\"이번 글은 웹 개발을 위한 HTML 가이드 21편입니다. 이번 글의 주제는 하이라이트 태그입니다. 우리는 \", _jsx(Mark, {\n          children: \"간혹 어떤 페이지 내에서 그 페이지와 연관이 있는 단어나 내용을 강조하고 싶을 때가 있습니다.\"\n        }), \" 이 연관성에 초점을 두고 사용하는 태그가 바로 \", _jsx(Strong, {\n          children: \"하이라이트\"\n        }), \"를 위한 태그입니다. 이번에 알아볼 태그는 바로 \", _jsx(Code, {\n          children: \"mark\"\n        }), \"태그입니다.\"]\n      }), \"\\n\", _jsx(_components.h1, {\n        id: \"mark-태그\",\n        children: \"mark 태그\"\n      }), \"\\n\", _jsx(_components.pre, {\n        className: \"language-html\",\n        children: _jsxs(_components.code, {\n          className: \"language-html code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"h1\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"아이유 생일\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"h1\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\r\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"p\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\r\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  아이유의 생일은 \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"mark\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"5월 16일\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"mark\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"입니다.\\r\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"p\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          })]\n        })\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://drive.google.com/uc?export=view&id=1GDn2C51M0o6zNn7nNwR0OX97h9pwkiDm\",\n        alt: \"mark 태그는 연관성을 강조한다.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"mark\"\n        }), \"태그의 기본적인 디자인은 노란색 배경입니다. 마치 형광펜으로 그은 것처럼 표시가 되어있죠. 그래서 \", _jsx(_components.strong, {\n          children: \"하이라이트\"\n        }), \"라고 하는 겁니다. \", _jsx(_components.code, {\n          children: \"mark\"\n        }), \"태그는 HTML 5에서 처음 등장했습니다. 사용자들에게 원하는 부분을 찾는 수고를 덜하게끔 하기 위해서 하이라이트를 통해 표시를 할 때 사용합니다.\"]\n      }), \"\\n\", _jsxs(P, {\n        children: [\"단어나 문장을 강조한다는 점에서 \", _jsx(Code, {\n          children: \"em\"\n        }), \"태그나 \", _jsx(Code, {\n          children: \"strong\"\n        }), \"태그와 비슷하죠. 하지만 이 두가지는 \", _jsx(Strong, {\n          children: \"중요성\"\n        }), \"을 강조하는 것이고 \", _jsx(Code, {\n          children: \"mark\"\n        }), \"태그는 \", _jsx(Strong, {\n          children: \"연관성\"\n        }), \"을 강조한다는 것이 다릅니다. \", _jsx(Mark, {\n          children: \"따라서 중요하지 않더라도 주제와 연관이 있는 문구, 단어를 강조\"\n        }), \"할 수 있습니다. 현재 이 글의 붉은색 배경의 텍스트가 바로 \", _jsx(Code, {\n          children: \"mark\"\n        }), \"태그가 사용된 부분입니다.\"]\n      }), \"\\n\", _jsx(Line, {}), \"\\n\", _jsxs(_components.p, {\n        children: [\"이번 글에서는 하이라이트를 담당하는 태그인 \", _jsx(_components.code, {\n          children: \"mark\"\n        }), \"태그에 대해서 알아봤습니다. \", _jsx(_components.code, {\n          children: \"mark\"\n        }), \"태그는 \", _jsx(_components.code, {\n          children: \"em\"\n        }), \"태그나 \", _jsx(_components.code, {\n          children: \"strong\"\n        }), \"태그처럼 단어나 문장을 강조하지만 \", _jsx(_components.strong, {\n          children: \"중요성이 아닌 연관성을 초점으로 두고 강조하는 점\"\n        }), \"이 다릅니다. 이번 글에서 준비된 내용은 여기까지입니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"이번 글은 여기서 마치도록 하겠습니다. 다음 글에서는 \", _jsx(_components.code, {\n          children: \"small\"\n        }), \"태그에 대해서 알아봅시다.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"slug":"2022-01-10-37-mark-tag"},"prev":{"frontMatter":{"id":36,"title":"웹 개발을 위한 HTML 가이드 20편 - 인용 태그","description":"2021년도 막바지에 이르렀습니다. 사실 올해도 그닥 대단한 일은 한 게 없고 공부만 주야장천 한 것 같습니다. 다가오는 2022년에는 좀 더 새로운 변화를 주고 좀 더 나은 사람이 되려고 노력해보려고 합니다. 그래서 새로운 마음으로 밤낮도 바꿔보고 있습니다. 잘 안된다는 게 함정이지만. 그래서 상쾌한 마음으로 오랜만에 글을 하나 남겨봅니다. 이번 글은 웹 개발을 위한 HTML 가이드 20편입니다. 텍스트 관련 태그의 6번째 글이고 이번 글에서 다룰 내용은 인용 태그입니다. 인용이라는 것은 우리가 일상 생활을 하면서도 볼 수 있고 다양한 글에서도 발견할 수 있죠. 인용은 다른 사람의 말을 가져와서 비유하는데에 쓰거나 설명하는데에 쓰는 것을 말합니다. 자신이 하고 싶은 말이 있을 때 인용을 통해서 대신할 수도 있고 말입니다.","coverImage":"https://drive.google.com/uc?export=view&id=1S5_ygMpyP7pn1YANEsmHu8xaq9M69YMJ","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","인용 태그","q 태그","blockquote 태그"],"categories":["가이드","HTML"],"createdAt":1640825909000,"updatedAt":1640825909000,"keywords":[],"drawDate":1640825909000,"display":true,"type":"post"},"slug":"2021-12-30-36-q-and-blockquote-tag","fullPath":"/post/2021-12-30-36-q-and-blockquote-tag","content":"\r\nimport {\r\n  A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name,\r\n  Dt, Dd, HTMLTextPosts\r\n} from '@/components/Post';\r\n\r\n<HtmlGuideMessage />\r\n\r\n<HTMLTextPosts />\r\n\r\n# 개요\r\n2021년도 막바지에 이르렀습니다. 사실 올해도 그닥 대단한 일은 한 게 없고 공부만 주야장천 한 것 같습니다. 다가오는 2022년에는 좀 더 새로운 변화를 주고 좀 더 나은 사람이 되려고 노력해보려고 합니다. 그래서 새로운 마음으로 밤낮도 바꿔보고 있습니다. 잘 안된다는 게 함정이지만.\r\n\r\n그래서 상쾌한 마음으로 오랜만에 글을 하나 남겨봅니다. 이번 글은 **웹 개발을 위한 HTML 가이드** 20편입니다. 텍스트 관련 태그의 6번째 글이고 이번 글에서 다룰 내용은 **인용 태그**입니다. 인용이라는 것은 우리가 일상 생활을 하면서도 볼 수 있고 다양한 글에서도 발견할 수 있죠. 인용은 다른 사람의 말을 가져와서 비유하는데에 쓰거나 설명하는데에 쓰는 것을 말합니다. 자신이 하고 싶은 말이 있을 때 인용을 통해서 대신할 수도 있고 말입니다.\r\n\r\n**CSS**를 함께 다뤄야 좀 더 의미가 있는 태그지만 일단은 그냥 알아보도록 합시다.\r\n\r\n# 인용 태그\r\n암튼 그래서 이번에 알아볼 인용 태그에는 **두 가지의 태그**가 존재합니다. 하나는 **블럭 형식의 태그**고 나머지 하나는 **인라인 형식의 태그**입니다. 이 두가지의 태그를 경우에 따라서 사용하면 되겠습니다.\r\n\r\n## q 태그\r\n문단 내에 **인용문을 넣고 싶을 때**에 사용하는 `q`태그는 인라인 형식의 태그입니다. 긴 인용문이 아닌 **짧은 인용문을 표현**할 때에 사용합니다.\r\n\r\n```html file=q.html\r\n<p>\r\n  아이유가 맡은 장만월이라는 캐릭터는 <q cite=\"url\">넌 0순위야. 너 아니면 안 되는 거 맞아. 내 마음에 쏙 들었으니까.</q> 라는 말을 한 적이 있다.\r\n</p>\r\n```\r\n\r\n![q 태그는 따옴표가 붙는다.](https://drive.google.com/uc?export=view&id=1U-Cps5tBoWcDnftiyjx3VC8aNkUp2BfQ)\r\n\r\n`q`태그는 이렇게 열고 닫는 태그입니다. 안에 내용을 넣어주면 됩니다. 브라우저에서는 보이는 것처럼 따옴표가 둘러쌓이게 됩니다. 인라인 형식의 태그이기 때문에 `p`태그 안에서 사용하는 게 보통입니다.\r\n\r\n사용 가능한 속성으로는 `cite`속성이 있습니다. 여기에는 **출처가 되는 url**를 넣으면 됩니다.\r\n\r\n## blockquote 태그\r\n이번에는 블럭 형식의 인용 태그를 알아봅시다. 블럭 형식이기 때문에 줄바꿈을 함께 사용할 수 있습니다. **짧은 인용이 아닌 긴 인용문을 넣을 때**에 이 `blockquote`태그를 사용합니다.\r\n\r\n```html file=blockquote.html\r\n<p>아이유는 호텔 델루나라는 드라마에서 장만월이라는 역할을 맡았다. 그 캐릭터는 아래와 같은 대사를 한 적이 있다.</p>\r\n<blockquote cite=\"url\">\r\n  넌 0순위야. 너 아니면 안 되는 거 맞아.\r\n  내 마음에 쏙 들었으니까.\r\n</blockquote>\r\n```\r\n\r\n![blockquote 태그는 문단과 구분된다.](https://drive.google.com/uc?export=view&id=1aZtSZNoX3xeKIvPhvOC1sQNAeg0Co5RG)\r\n\r\n이 태그도 여는 태그와 닫는 태그가 있어서 이런식으로 사용하면 됩니다. `blockquote`태그는 따옴표가 생기지 않는 대신 자동으로 **들여쓰기가 되고 일반 문단이랑 구분된 모습**을 갖게 됩니다.\r\n\r\n`blockquote`태그에도 `cite`속성이 사용됩니다. **url**을 넣어주시면 됩니다. `blockquote`태그는 이렇게만 사용하면 당연히 밋밋하고 심심한 디자인이죠. 그래서 CSS를 통해 바꾸는 편입니다. 가 아니라 그냥 바꿔야 합니다. HTML은 CSS와 떼려야 뗄 수 없는 관계입니다. 언젠가는 알게 되실겁니다.\r\n\r\n<Line />\r\n\r\n이번 글에서는 간단하게 인용 태그들에 대해서 알아봤습니다. **인용 태그는 두가지**가 있고 **인라인 형식인 `q`태그**와 **블럭 형식인 `blockquote`태그**가 있습니다. 이 두 태그는 상황에 맞게 사용하면 되겠습니다. 이번 글에서 준비된 내용은 여기까지입니다. 다음 글에서는 **하이라이트 태그**에 대해서 알아보도록 합시다.\r\n\r\n이번 글은 여기서 마치도록 하겠습니다. 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"12","yearMonth":"2021-12"}},"next":{"frontMatter":{"id":38,"title":"웹 개발을 위한 HTML 가이드 22편 - small 태그","description":"이번 글은 웹 개발을 위한 HTML 가이드 22편입니다. 이번 글에서 다룰 내용은 저번 글에서 예고했던대로 small태그입니다. 텍스트 관련 태그도 어느정도 진행이 된 것 같습니다. 이제 정말 얼마 안남았거든요. 사실 이번 글에서 다룰 내용도 그다지 중요한 내용은 아닙니다. 그래도 일단은 다루고 넘어가려고 합니다. 그럼 바로 본론으로 들어가봅시다. small태그는 작은 텍스트를 표현할 때에 사용합니다. 기존의 텍스트보다 약간 작아지는 효과를 가지고 있습니다. 특별한 의미나 기능을 가지는 태그는 아니기 때문에 몰라도 좋았으나 지금은 특별한 의미가 생겼습니다.","coverImage":"https://drive.google.com/uc?export=view&id=1WxRQj4rm8_zFbyKb-sSV0S9_i-llFiCD","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","small 태그","덧붙임 글 태그"],"categories":["가이드","HTML"],"createdAt":1641845490000,"updatedAt":1641845490000,"keywords":[],"drawDate":1641845490000,"display":true,"type":"post"},"slug":"2022-01-11-38-small-tag","fullPath":"/post/2022-01-11-38-small-tag","content":"\r\nimport { HTMLTextPosts, A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P, Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image, Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name, Dt, Dd } from '@/components/Post';\r\n\r\n<HtmlGuideMessage />\r\n\r\n<HTMLTextPosts />\r\n\r\n# 제목\r\n이번 글은 **웹 개발을 위한 HTML 가이드** 22편입니다. 이번 글에서 다룰 내용은 저번 글에서 예고했던대로 `small`태그입니다. 텍스트 관련 태그도 어느정도 진행이 된 것 같습니다. 이제 정말 얼마 안남았거든요. 사실 이번 글에서 다룰 내용도 그다지 중요한 내용은 아닙니다. 그래도 일단은 다루고 넘어가려고 합니다. 그럼 바로 본론으로 들어가봅시다.\r\n\r\n# small 태그\r\n<P><Code>small</Code>태그는 작은 텍스트를 표현할 때에 사용합니다. <Strong>기존의 텍스트보다 약간 작아지는 효과</Strong>를 가지고 있습니다. 특별한 의미나 기능을 가지는 태그는 아니기 때문에 몰라도 좋<Bold>았으나</Bold> 지금은 특별한 의미가 생겼습니다.</P>\r\n\r\n```html file=small.html\r\n<p>small 태그는 이렇게 <small>작은 텍스트를 표현할 때에 사용합니다.</small></p>\r\n```\r\n\r\nvscode를 열고 대충 따라서 입력을 해보고 라이브 서버를 열어보세요. 그럼 아래와 같은 결과물이 나타나게 됩니다.\r\n\r\n![small 태그를 사용한 모습이다.](https://drive.google.com/uc?export=view&id=1GYLGBvF4ZU0xWwQkaqbsNejfXbgcqrtk)\r\n\r\n정말 텍스트가 작아졌습니다. **HTML 5**가 나타나면서 `small`태그에 변화가 생겼습니다. 현재는 페이지의 본문에 비해 비교적 중요도가 떨어지는 작은 영역에 쓰는 것을 권장하고 있습니다. 이를테면 저작권을 표기하는 부분을 예로 들 수 있겠습니다.\r\n\r\n![small 태그의 기본 스타일.](https://drive.google.com/uc?export=view&id=1dy5i3KktKWJ1Z-LDFdbl39s3_Jrtn5hM)\r\n\r\n`small`태그를 사용하지 않고도 똑같은 효과를 만드는 방법이 있는데, 바로 **CSS를 활용**하는 것입니다. 우리는 아직 CSS를 배우지 않았기 때문에 아래의 코드를 봐도 아 이런 게 있구나라는 시선으로 바라보면 되겠습니다.\r\n\r\n보면 알겠지만 `small`태그에는 `font-size: smaller;`라는 CSS가 적용되어 있습니다. `small`태그의 기본 스타일 입니다. 그렇기 때문에 위의 코드와 아래의 코드는 동일한 셈입니다. 이렇게 CSS를 활용해도 되고 `small`태그를 활용해도 됩니다. 물론 외관상으로는 동일하지만 그 의미는 전혀 다르다는 점을 인지하고 있어야합니다.\r\n\r\n```html file=small.html\r\n<p>small 태그는 이렇게 <span>작은 텍스트를 표현할 때에 사용합니다.</span></p>\r\n```\r\n\r\n```css\r\nspan {\r\n  font-size: smaller;\r\n}\r\n```\r\n\r\n<Line />\r\n\r\n이번 글에서는 간단하게 `small`태그에 대해서 알아봤습니다. 저작권이나 연락처 같은 비교적 중요도가 떨어지는 부분에 사용하는 태그였습니다. 이번 글에서 준비한 내용은 여기까지입니다. 다음 글에서는 코드 블럭을 다루는 `code`태그와 `pre`태그에 대해서 알아보도록 하겠습니다. 이번 글은 여기서 마치도록 하고 다음 글에서 봅시다.\r\n","date":{"year":"2022","month":"01","yearMonth":"2022-01"}}},"__N_SSG":true}
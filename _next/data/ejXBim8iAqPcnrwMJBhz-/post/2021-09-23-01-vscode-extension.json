{"pageProps":{"post":{"frontMatter":{"id":27,"title":"웹 개발을 위한 HTML 가이드 13편 - VSCode 추천 확장 프로그램","description":"저번 글에서는 vscode의 설치와 사용에 대해서 다뤘습니다. 이번 글에서는 vscode에서 사용할 수 있는 확장 프로그램에 대해서 알아보려고 합니다. 정확히는 확장 프로그램 추천입니다. vscode는 가볍지만 확장 프로그램을 통해서 얼마든지 원하는 기능과 환경을 구축할 수 있다는 특징을 갖고 있습니다. 이러한 특징 덕에 WebStorm처럼은 아니지만 IDE에 버금가는 강력한 기능을 갖게 만들 수 있습니다. 코딩, 프로그래밍을 처음 하시는 분들에게 vscode를 추천한 것은 사람들이 많이 쓰기 때문도 있지만 이런 특징 때문도 있다는 점을 알고 계시면 좋겠습니다. 자, 그럼 웹 개발을 위한 HTML 가이드 13편을 시작하도록 합시다. vscode에는 정말 많은 확장 프로그램이 존재합니다. 그리고 이러한 것은 많은 사람들이 사용하고 있는 vscode라서 가능한 결과입니다. HTML과 관련된 확장 프로그램도 정말 다양하게 존재합니다. 그 중에서 가장 필요한 것들을 골라서 소개할 생각입니다. 저번 글에서 이미 확장 프로그램을 설치하는 방법에 대해서 다뤘기 때문에 다시 설명하지는 않을 겁니다.","coverImage":"https://drive.google.com/uc?export=view&id=1vDJV-wy4ibW6Y3sfl1khXkgokBtDpzrm","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","비주얼 스튜디오 코드","VS Code"],"categories":["가이드","HTML"],"createdAt":1632385800000,"updatedAt":1632385800000,"keywords":[],"drawDate":1632385800000,"display":true,"type":"post"},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\",\n      strong: \"strong\",\n      a: \"a\",\n      h2: \"h2\",\n      img: \"img\",\n      code: \"code\",\n      h3: \"h3\"\n    }, _provideComponents(), props.components), {HtmlGuideMessage, P, Strong, Kbd, Line} = _components;\n    if (!HtmlGuideMessage) _missingMdxReference(\"HtmlGuideMessage\", true);\n    if (!Kbd) _missingMdxReference(\"Kbd\", true);\n    if (!Line) _missingMdxReference(\"Line\", true);\n    if (!P) _missingMdxReference(\"P\", true);\n    if (!Strong) _missingMdxReference(\"Strong\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(HtmlGuideMessage, {}), \"\\n\", _jsx(_components.h1, {\n        id: \"개요\",\n        children: \"개요\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"저번 글에서는 \", _jsx(_components.strong, {\n          children: \"vscode의 설치와 사용\"\n        }), \"에 대해서 다뤘습니다. 이번 글에서는 \", _jsx(_components.strong, {\n          children: \"vscode에서 사용할 수 있는 확장 프로그램\"\n        }), \"에 대해서 알아보려고 합니다. 정확히는 확장 프로그램 추천입니다. vscode는 가볍지만 확장 프로그램을 통해서 \", _jsx(_components.strong, {\n          children: \"얼마든지 원하는 기능과 환경을 구축할 수 있다는 특징\"\n        }), \"을 갖고 있습니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"이러한 특징 덕에 \", _jsx(_components.strong, {\n          children: \"WebStorm\"\n        }), \"처럼은 아니지만 \", _jsx(_components.strong, {\n          children: \"IDE에 버금가는 강력한 기능\"\n        }), \"을 갖게 만들 수 있습니다. 코딩, 프로그래밍을 처음 하시는 분들에게 vscode를 추천한 것은 사람들이 많이 쓰기 때문도 있지만 이런 특징 때문도 있다는 점을 알고 계시면 좋겠습니다.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"자, 그럼 웹 개발을 위한 HTML 가이드 13편을 시작하도록 합시다.\"\n      }), \"\\n\", _jsx(_components.h1, {\n        id: \"html-개발을-위한-확장-프로그램\",\n        children: \"HTML 개발을 위한 확장 프로그램\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"vscode에는 정말 많은 확장 프로그램이 존재합니다. 그리고 이러한 것은 많은 사람들이 사용하고 있는 vscode라서 가능한 결과입니다. \", _jsx(_components.strong, {\n          children: \"HTML과 관련된 확장 프로그램\"\n        }), \"도 정말 다양하게 존재합니다. 그 중에서 \", _jsx(_components.strong, {\n          children: \"가장 필요한 것들을 골라서 소개\"\n        }), \"할 생각입니다. 저번 글에서 이미 확장 프로그램을 설치하는 방법에 대해서 다뤘기 때문에 다시 설명하지는 않을 겁니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"확장 프로그램을 설치하는 방법이 잘 기억이 나지 않으신다면 \", _jsx(_components.a, {\n          href: \"/post/2021-09-13-01-vscode-install\",\n          children: \"Visual Studio Code 사용하기\"\n        }), \" 글을 참고하시기 바랍니다.\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"auto-complete-tag\",\n        children: \"Auto Complete Tag\"\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://drive.google.com/uc?export=view&id=19swUqhmw3Vfb618i63TyZ7ZHARlSrIVN\",\n        alt: \"Auto Complete Tag 확장 프로그램\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"첫번째로 소개할 확장 프로그램은 \", _jsx(_components.strong, {\n          children: \"Auto Complete Tag\"\n        }), \"입니다. 이 확장 프로그램은 \", _jsx(_components.strong, {\n          children: \"태그를 직접 입력할 때에 태그를 자동으로 닫아\"\n        }), \"주는 \", _jsx(_components.strong, {\n          children: \"Auto Close Tag\"\n        }), \" 확장 프로그램과 여는 태그와 닫는 태그 중에서 한가지를 수정할 때에 \", _jsx(_components.strong, {\n          children: \"다른 쪽도 수정되게끔 만들어\"\n        }), \"주는 \", _jsx(_components.strong, {\n          children: \"Auto Rename Tag\"\n        }), \" 확장 프로그램을 동시에 설치해주는 확장 프로그램입니다.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"이게 설치되어 있으면 HTML 코딩을 할 때 정말 편해집니다.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"htmltagwrap\",\n        children: \"htmltagwrap\"\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://drive.google.com/uc?export=view&id=1fBEZ-vJv39AcK8JIWomsxq9ZLISzf5Ac\",\n        alt: \"htmltagwrap 확장 프로그램\"\n      }), \"\\n\", _jsxs(P, {\n        children: [\"두번째는 \", _jsx(Strong, {\n          children: \"특정 텍스트를 선택(범위 지정)\"\n        }), \"한 상태나 \", _jsx(Strong, {\n          children: \"특정 태그를 선택한 상태\"\n        }), \"에서 \", _jsx(Kbd, {\n          children: \"ALT + W\"\n        }), \"를 누르면 새로운 태그로 감싸주는 기능을 제공하는 확장 프로그램입니다. 코딩을 하다가 태그들을 감싸줄 부모 태그가 필요할 때에 자식 태그가 될 태그를 선택하고 단축키를 누르면 부모 태그가 만들어지는 편리한 기능을 제공합니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"부모 태그가 만들어지면 \", _jsx(_components.code, {\n          children: \"p\"\n        }), \"태그인데 이름은 바꿔주면 됩니다. 여러번 사용해보면 감이 오실 겁니다.\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"css-관련-확장-프로그램\",\n        children: \"CSS 관련 확장 프로그램\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"html-css-support\",\n        children: \"HTML CSS Support\"\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://drive.google.com/uc?export=view&id=11LJjRw2XESjgj5Sc8ZG4XGl0JxPXM3JT\",\n        alt: \"HTML CSS Support 확장 프로그램\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"세번째는 HTML과 CSS를 사용하기 편하게 \", _jsx(_components.strong, {\n          children: \"자동완성 기능을 제공\"\n        }), \"해주는 확장 프로그램입니다. \", _jsx(_components.strong, {\n          children: \"html 파일에 css 파일이 연결되어 있을 경우\"\n        }), \"에 id 값이나 class 값이 이미 정의되어 있다면 html 코딩을 할 때에 \", _jsx(_components.strong, {\n          children: \"id나 class가 필요할 때\"\n        }), \" 미리 정의된 녀석들을 \", _jsx(_components.strong, {\n          children: \"추천\"\n        }), \"해주는 기능을 합니다. 지금 당장은 쓰지 않겠지만 미리 설치해둔다면 좋을 것 같습니다.\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"intellisense-for-css-class-names-in-html\",\n        children: \"IntelliSense for CSS class names in HTML\"\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://drive.google.com/uc?export=view&id=1F94Pn3idrn0YwP05nkNXvlDqGtZqNvrH\",\n        alt: \"IntelliSense for CSS class names in HTML 확장 프로그램\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"네번째로 소개할 확장 프로그램은 \", _jsx(_components.strong, {\n          children: \"IntelliSense for CSS class names in HTML\"\n        }), \"입니다. html 파일에 연결된 css 파일에 정의된 \", _jsx(_components.strong, {\n          children: \"클래스들을 미리 읽어\"\n        }), \"들여서 \", _jsx(_components.strong, {\n          children: \"클래스를 지정해줄 때에 편리한 기능을 제공\"\n        }), \"해줍니다. 위에 있는 확장 프로그램과는 또 다른 강력한 기능입니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"앞으로 HTML과 CSS를 자주 사용하게 되는데 CSS에서는 \", _jsx(_components.strong, {\n          children: \"클래스를 자주 사용\"\n        }), \"하게 됩니다. 디자인을 입힐 때에는 클래스를 주로 사용하거든요. 아무튼 이것도 설치해두면 앞으로 도움이 될 겁니다. 지금 당장 쓰지는 않더라도 말이죠.\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"css-peek\",\n        children: \"CSS Peek\"\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://drive.google.com/uc?export=view&id=10AecQ-lRpJTLLxiOtnzLwx5bPuiFOfrv\",\n        alt: \"CSS Peek 확장 프로그램\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"다섯번째 확장 프로그램은 HTML과 CSS를 함께 사용할 때에 html 파일에서 지정한 \", _jsx(_components.strong, {\n          children: \"클래스나 아이디\"\n        }), \"의 스타일을 \", _jsx(_components.strong, {\n          children: \"확인할 때\"\n        }), \"에 편리한 기능을 제공해줍니다. \", _jsx(_components.strong, {\n          children: \"CSS Peek\"\n        }), \"이라는 확장 프로그램입니다. 아무 태그에 클래스나 아이디를 지정하고 지정한 클래스나 아이디를 우클릭하면 \", _jsx(_components.strong, {\n          children: \"정의로 이동\"\n        }), \", \", _jsx(_components.strong, {\n          children: \"참조로 이동\"\n        }), \"과 같은 메뉴가 나타납니다. 정의로 이동을 누르면 \", _jsx(_components.strong, {\n          children: \"연결된 css 파일의 해당 클래스로 넘어갈 수\"\n        }), \" 있습니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"심지어는 html 파일 내에서 \", _jsx(_components.strong, {\n          children: \"css 파일의 일부분을 팝업해서 스타일을 편집할 수도\"\n        }), \" 있습니다. 이건 나중에 CSS 가이드를 할 때에 자세하게 다뤄보도록 하겠습니다. 결론적으로 귀찮게 파일을 뒤적거리지 않아도 된다는 의미죠. 하지만 가끔 먹통이 될 때도 있어서 이 점은 참고하시면 되겠습니다.\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"live-server\",\n        children: \"Live Server\"\n      }), \"\\n\", _jsx(_components.img, {\n        src: \"https://drive.google.com/uc?export=view&id=19666Tcf1u4lltaYbdN1HIfFlV4-XqkOb\",\n        alt: \"Live Server 확장 프로그램\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"우리는 앞으로 공부를 하면서 html 파일을 작성할 때에 \", _jsx(_components.strong, {\n          children: \"결과물을 미리 보고 싶을 때\"\n        }), \"가 있을 겁니다. 그럴 때에 사용하는 확장 프로그램 기능이 바로 \", _jsx(_components.strong, {\n          children: \"Live Server\"\n        }), \"입니다. \", _jsx(_components.strong, {\n          children: \"서버를 띄워서 라이브로 결과물을 확인하면서 코딩\"\n        }), \"을 할 수 있습니다. \", _jsx(_components.strong, {\n          children: \"자동으로 새로고침\"\n        }), \"이 되기 때문에 개발자는 번거롭게 새로고침을 할 필요가 없습니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"이 확장 프로그램을 설치하면 vscode의 하단에 \", _jsx(_components.strong, {\n          children: \"Go Live라는 버튼\"\n        }), \"이 생깁니다. 버튼이 없다면 html 파일에서 우클릭을 하고 \", _jsx(_components.strong, {\n          children: \"Open with Live Server\"\n        }), \"를 클릭하면 됩니다. 로컬호스트 \", _jsx(_components.strong, {\n          children: \"5500 포트\"\n        }), \"로 서버가 열립니다.\"]\n      }), \"\\n\", _jsx(Line, {}), \"\\n\", _jsxs(_components.p, {\n        children: [\"지금까지 간단하게 HTML에 필요한 확장 프로그램을 소개해봤습니다. 위에서 소개한 확장 프로그램 이외에도 \", _jsx(_components.strong, {\n          children: \"다양한 확장 프로그램이 있습니다.\"\n        }), \" 여러분의 입맛에 맞게 살펴보시면 될 것 같습니다. 이 가이드는 HTML 가이드인데 CSS 관련된 확장 프로그램도 같이 추천한 이유는 어차피 나중에 써야하기 때문입니다. 소개한 확장 프로그램이 많지는 않지만 이정도면 HTML을 개발하는데에 있어서 불편함은 없을 것 같습니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"이번 글은 여기까지입니다. 다음 글은 \", _jsx(_components.strong, {\n          children: \"링크 태그\"\n        }), \"에 대해서 알아보도록 합시다.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"slug":"2021-09-23-01-vscode-extension"},"prev":{"frontMatter":{"id":26,"title":"웹 개발을 위한 HTML 가이드 12편 - Visual Studio Code 사용하기","description":"우리는 지금까지 알게 된 태그는 별로 없지만 연습을 하기 위해 메모장으로 코딩을 했습니다. 물론 계속 메모장으로 코딩을 해도 상관 없지만 상당히 불편하다는 것을 느꼈을 겁니다. 이 부분은 취향에 따라 차이가 있지만 보통의 경우 편리한 기능을 제공해주는 텍스트 에디터를 사용합니다. 텍스트 에디터의 종류는 다양합니다. 프로그래밍 언어에 따라서 인기가 있는 에디터가 있기도 합니다. 다양한 에디터들 중에서 오늘 우리가 알아볼 텍스트 에디터는 비주얼 스튜디오 코드라는 녀석입니다. 마이크로소프트에서 만든 텍스트 에디터인데 사용자가 많아서 많은 확장 프로그램들이 만들어지고 있습니다. 이제 이 녀석에 대해서 알아봅시다. 시작하기 전에 메모장을 사용하면서 굳이 불편함을 느끼지 않았다면 메모장을 계속 써도 상관은 없습니다. 본인의 선택입니다.","coverImage":"https://drive.google.com/uc?export=view&id=1xCkzKi1sM414SmXwmWXyEJJ-oLMGBqVL","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","비주얼 스튜디오 코드","VS Code"],"categories":["가이드","HTML"],"createdAt":1631470080000,"updatedAt":1632549960000,"keywords":[],"drawDate":1631470080000,"display":true,"type":"post"},"slug":"2021-09-13-01-vscode-install","fullPath":"/post/2021-09-13-01-vscode-install","content":"\r\nimport {\r\n  A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name,\r\n  Dt, Dd\r\n} from '@/components/Post';\r\n\r\n<HtmlGuideMessage />\r\n\r\n# 개요\r\n우리는 지금까지 알게 된 태그는 별로 없지만 연습을 하기 위해 메모장으로 코딩을 했습니다. 물론 계속 메모장으로 코딩을 해도 상관 없지만 상당히 불편하다는 것을 느꼈을 겁니다. 이 부분은 취향에 따라 차이가 있지만 보통의 경우 편리한 기능을 제공해주는 텍스트 에디터를 사용합니다.\r\n\r\n텍스트 에디터의 종류는 다양합니다. 프로그래밍 언어에 따라서 인기가 있는 에디터가 있기도 합니다. 다양한 에디터들 중에서 오늘 우리가 알아볼 텍스트 에디터는 **비주얼 스튜디오 코드(Visual Studio Code)**라는 녀석입니다. 마이크로소프트에서 만든 텍스트 에디터인데 사용자가 많아서 많은 확장 프로그램들이 만들어지고 있습니다. 이제 이 녀석에 대해서 알아봅시다.\r\n\r\n시작하기 전에 메모장을 사용하면서 굳이 불편함을 느끼지 않았다면 메모장을 계속 써도 상관은 없습니다. 본인의 선택입니다.\r\n\r\n# 비주얼 스튜디오 코드\r\n비주얼 스튜디오 코드(Visual Studio Code)는 줄여서 **vscode**라고도 많이 부릅니다. 사용하는 사람이 많기 때문에 정보를 찾는데에 있어서 어려움이 없습니다. 당연하게도 vscode보다 뛰어난 에디터도 있습니다. 가장 먼저 떠오르는 것은 **WebStorm**이라는 녀석입니다. 근데 이 녀석은 **유료**입니다. 그 대신에 진짜 어마어마한 기능을 갖고 있습니다.\r\n\r\n<P>이제 막 프로그래밍에 입문한 사람들에게 에디터를 유료로 사용해라! 라고는 할 수가 없기 때문에 vscode를 사용하는 겁니다. <Strong>물론 vscode 자체만으로도 어렵지 않게 프로그래밍이 가능</Strong>합니다. 아무튼, 이제부터 vscode에 대해서 알아볼 겁니다. <Mark>설치부터 시작해서 기본적인 사용 방법을 함께 알아보도록 합시다.</Mark></P>\r\n\r\n**제가 윈도우이기 때문에 윈도우를 기준으로 설명합니다!**\r\n\r\n## 설치하기\r\n프로그램을 사용하기 위해서는 가장 먼저 설치를 해야합니다. 설치를 위해서 검색을 해봅시다. 구글에다가 **vscode**라고 검색합니다. 그러면 가장 위에 보이는 사이트가 있습니다. 이 사이트로 들어가줍시다.\r\n\r\n![구글에 vscode를 검색하고 보이는 사이트로 들어간다.](https://drive.google.com/uc?export=view&id=1SssmgxNgRyx4vY0HUfMLbdrTsmKHsmRh)\r\n\r\n사이트에 들어간 다음에 할 것은 간단합니다. 바로 눈 앞에 보이는 **파란색 다운로드 버튼을 클릭**하는 겁니다. 아마도 **운영체제에 맞게끔 다운로드 파일이 다운로드** 될 겁니다. 아무튼 다운로드를 하고난 다음에는 설치 프로그램을 실행하면 됩니다.\r\n\r\n![사이트에 들어가면 여러분의 눈 앞에 다운로드 버튼이 보인다. 클릭하자.](https://drive.google.com/uc?export=view&id=1V42E-S2hqw3UQlB-VY2L_wS8BwKSUI4o)\r\n\r\n대충 아무 곳에다가 파일을 다운로드하고, 실행합니다. 설치 자체는 다음 버튼을 계속 누르면 됩니다. 그래도 혹시 모르니까 아래의 이미지들과 같이 체크가 되어있는지 확인하시면 되겠습니다.\r\n\r\n![동의합니다를 눌러준다.](https://drive.google.com/uc?export=view&id=19cu6-jOMOdRu6lykNdxNliK7aJp55SQe)\r\n![이 네가지가 체크되어있는지 확인하자.](https://drive.google.com/uc?export=view&id=1eGAZu_q1lccMyb-QcJc6_-xIk_jrGyO_)\r\n![설치 버튼을 눌러준다.](https://drive.google.com/uc?export=view&id=1uCl9rRFSDRiAQ97_QpLnVsy2UI75HwvO)\r\n![설치가 되는 모습이다.](https://drive.google.com/uc?export=view&id=1GX0tpVlAbSOehgf24aQ9JV_yAcXS3wy-)\r\n\r\n설치를 다 하고 실행하면 아래와 같은 모양의 프로그램이 실행됩니다.\r\n\r\n![비주얼 스튜디오 코드의 모습이다.](https://drive.google.com/uc?export=view&id=1TzLeW76Rd6uyQsmIC0U4fTUmow0aHGvK)\r\n\r\n제가 쓰던 환경에서 설정을 잠시 없앤 상태에서 찍은 이미지지만 방금 막 프로그램을 설치하고 실행한 여러분들과는 조금 다를 겁니다. 달라도 상관 없습니다. 설정이야 알아서 꾸며서 쓰면 되거든요. 이제 설치는 완료되었습니다. 기본적인 설정을 해보도록 합시다.\r\n\r\n## 한글 설정\r\n**vscode는 한글을 지원**하지만 처음에 설치하면 한글이 아닙니다. 그래서 **한글 설정을 해줘야** 합니다. 아주 간단하게 한글 설정을 할 수 있습니다. 좌측의 아이콘들 중에서 사각형 네개가 그려져 있는 아이콘을 클릭하시면 **확장 프로그램**을 검색할 수 있습니다.\r\n\r\n지금 다루는 확장 프로그램에 대한 내용은 다음 글에서 계속 다룰 것이기 때문에 기억해둡시다. **vscode를 강화시키는 아주 중요한 기능**입니다.\r\n\r\n![확장 프로그램 아이콘을 클릭해보자.](https://drive.google.com/uc?export=view&id=1leIC_ns_EKINHKcKC6xpLS6bt7xe2ul9)\r\n\r\n생긴게 갑자기 달라졌는데 개의치마세요! 저는 사용하던 테마가 있을 뿐입니다.\r\n\r\n아무튼 확장 프로그램 아이콘을 클릭했으면 **검색**을 합시다. **korean**이라고 검색만 해도 아래와 같은 아이콘을 갖고 있는 확장 프로그램을 발견할 수 있습니다. 저는 이미 설치되어있어서 제거라는 버튼이 있지만 여러분은 되어있지 않을 겁니다. 설치 버튼을 눌러서 과감하게 설치하고나면 한글 설정이 완료됩니다.\r\n\r\n![한글 설정을 할 수 있는 확장 프로그램이다.](https://drive.google.com/uc?export=view&id=13NkfcEaui6tTI582W-mcl54C8yCWiz37)\r\n\r\n## 기본적인 사용법\r\n한글 설정도 마쳤으니 이제는 **vscode의 간단한 사용법**에 대해서 알아봅시다. 우리가 당장 프로그래밍을 하기 위해 필요한 것들을 우선 살펴보는 게 좋겠습니다. 간단하게 설정에 들어가서 설정을 하는 방법이나 쉽게 HTML 코딩을 하는 방법에 대해서 알아봅시다.\r\n\r\n### 작업 폴더 설정하기\r\n![폴더 작업을 하지 않은 상태의 모습.](https://drive.google.com/uc?export=view&id=14qKIZeE3JoHREbtDhZ4qclHh3Gt1ML1E)\r\n\r\n여러분이 vscode를 설치하고 사용하려고 보면 파일을 건드릴 수가 없습니다. 정확히는 건드릴 파일이 없죠. 왜냐면 **작업 폴더 설정**을 하지 않았기 때문입니다. 그래서 우리가 사용하던 작업 폴더를 지정해줄 필요가 있습니다.\r\n\r\n폴더 설정 방법에는 여러가지가 있습니다. 첫번째 방법은 아래의 이미지처럼 **작업 폴더를 vscode의 파일 탐색기에 드래그**해서 vscode에서 사용할 수 있게 여는 겁니다.\r\n\r\n![폴더를 드래그해서 폴더 설정하기.](https://drive.google.com/uc?export=view&id=1jbSeig8jOhpMlox_D2ZeBKX8HzoO51XU)\r\n\r\n두번째는 **폴더 열기** 버튼을 눌러서 직접 작업 폴더를 찾아 적용시키는 겁니다.\r\n\r\n<P>세번째 방법은 작업 폴더에서 터미널<Gray>(cmd나 파워쉘 같은)</Gray>을 열고 <Code>code .</Code>를 쳐서 vscode를 작업 폴더에서 여는겁니다. 아래의 이미지 처럼요. <Strong>code</Strong> 는 vscode를 의미하는 것이고 그 뒤의 <Strong>.</Strong>은 현재 폴더를 의미합니다. 즉 작업 폴더에서 vscode를 열겠다. 라는 의미인 것이죠.</P>\r\n\r\n![터미널을 이용해서 열기.](https://drive.google.com/uc?export=view&id=1RipMDzJJTWPwbz8uBi-GAXRZNaUGsSaV)\r\n\r\n저는 세번째 방법을 더 좋아하고 자주 이용합니다. 굳이 설정이랄 것도 없고 항상 저렇게 열기 때문에 따로 설정해줄 필요가 없거든요. 아무튼 이렇게 설정을 마치고나면 본격적인 코딩이 가능해집니다.\r\n\r\n![폴더 설정을 마친 모습이다.](https://drive.google.com/uc?export=view&id=1WjzUIAH-SNsOW5070fLPlA8BaHoCAHj8)\r\n\r\n### 파일 탐색기 다루기\r\n![vscode의 파일 탐색기의 모습이다.](https://drive.google.com/uc?export=view&id=1vqy6tSdU9D1qochvDOUjkmuVMvrDHppc)\r\n\r\nvscode를 켜면 왼쪽에 보이는 아이콘 메뉴들 중에서 파일 모양처럼 생긴게 **파일 탐색기** 부분입니다. 여러분의 프로젝트 폴더의 내부 파일들이 보이고 이를 직접적으로 조작할 수 있는 부분이죠. 파일 탐색기에서 파일을 만들면 실제로 디스크에도 파일이 생기는 겁니다.\r\n\r\n파일을 어떻게 만들고, 폴더를 어떻게 만드는지 알아봅시다. 아주 간단합니다.\r\n\r\n<P>프로젝트 폴더 내에 파일이나 폴더가 아무것도 없을 때에는 <Bold>탐색기에 커서를 대고 있거나 탐색기의 부분이 활성화되어 있을 때에 생기는 아이콘들을 이용</Bold>해서 파일을 만들 수 있고 <Bold>그냥 허공에 우클릭을 하면 나타나는 메뉴를 통해서</Bold> 파일이나 폴더를 만들 수 있습니다.</P>\r\n\r\n![탐색기가 활성화되면 상단에 아이콘이 뜬다.](https://drive.google.com/uc?export=view&id=1DmvEClbdnP4u6mDlHVePjbTR-2PFrbAy)\r\n![탐색기를 우클릭하면 메뉴가 뜬다.](https://drive.google.com/uc?export=view&id=191Hzu8b3x0jdFrC83hI0z6P1SCki31n2)\r\n\r\n<P>이렇게 아이콘을 누르거나 메뉴를 이용해서 폴더나 파일을 만든 후에는 <Bold>이름을 입력</Bold>해주면 됩니다. 파일 이름을 입력하지 않으면 파일의 생성은 취소됩니다. 파일 이름을 입력해줍시다.</P>\r\n\r\n<P>특정 폴더의 안에서 파일이나 또 다른 폴더를 만들기 위해서는 <Bold>탐색기에서 해당 폴더를 클릭한 상태</Bold>에서 탐색기 상단의 아이콘을 누르거나 폴더를 우클릭해서 새 폴더 혹은 새 파일 메뉴를 클릭하면 되겠습니다.</P>\r\n\r\n<P>파일의 이름을 바꾸려면 파일을 클릭한 상태에서 <Kbd>F2</Kbd>를 누르면 됩니다. 윈도우에서 파일 이름 바꿀 때에 사용하는 단축키와 같습니다. 여기까지가 아주 기본적인 파일 탐색기 이용 방법입니다. 하다보면 적응 될 겁니다. 사용해봅시다!</P>\r\n\r\n### 설정 이용하기\r\n<P>vscode는 가볍지만 어떤 설정을 하느냐에 따라서 천차만별의 기능을 갖게 됩니다. 설정을 통해서 여러분의 개성을 표현할 수도 있습니다. 설정창으로 들어가는 방법에는 <Strong>좌측 하단의 톱니모양 아이콘을 클릭</Strong>하고 설정을 누르는 방법과 <Kbd>CTRL + ,</Kbd>을 누르는 방법 등등이 있는데 단축키를 이용해서 들어가는 게 가장 빠릅니다.</P>\r\n\r\n![설정창에 들어간 모습이다.](https://drive.google.com/uc?export=view&id=1B1HUOwzG1GmjWFjIKlpaO-klpvV9GK4K)\r\n\r\n이 설정창에서 많은 것들을 바꿀 수가 있습니다. 확장 프로그램에 대한 설정도 여기서 바꿀 수 있습니다. 만일 여러분이 코딩에 좀 익숙하다면 직접 **JSON파일**을 건드려서 설정을 할 수도 있습니다.\r\n\r\n![json파일을 직접 건드리는 방법도 있다.](https://drive.google.com/uc?export=view&id=1CXez0KjgaB0MsD4fkiAtrQABZzu6c-9L)\r\n\r\n설정에서 폰트 정도는 바꿔주는 게 여러분의 정신건강에 좋을 수 있습니다. 폰트 중에서도 모든 글자의 폭이 같은 폰트를 사용하면 더 좋습니다. 현재 제가 사용하는 폰트는 **Cascadia Code**라는 폰트 입니다.\r\n\r\n### Emmet 사용하기\r\nHTML 코딩을 할 때에는 **Emmet**의 기능을 이용하는 게 정말 편리합니다. 하나 하나 태그를 치는 것보다는 태그의 이름을 치고 **탭을 눌러 자동으로 완성**하는 게 상당한 편의성을 제공해줍니다. Emmet에 대한 디테일한 사용법은 나중에 따로 올려보겠습니다. 이번 글에서는 간단하게만 알아봅시다.\r\n\r\n```text\r\n!\r\n```\r\n\r\n비어있는 html 파일에서 **느낌표**만 치고 **탭**을 누르면 아래와 같은 기본 골격이 만들어집니다. 여기서 조금만 수정하면 되겠죠.\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n```text\r\ndiv\r\n```\r\n\r\n```html\r\n<div></div>\r\n```\r\n\r\n**div**를 치고 **탭**을 누르면 `div`태그가 완성됩니다. 홀로 닫는 태그의 경우에는 닫는 태그가 없어도 되기 때문에 홀로 닫는 태그가 만들어집니다.\r\n\r\n```text\r\ndiv>p\r\n```\r\n\r\n```html\r\n<div>\r\n  <p></p>\r\n</div>\r\n```\r\n\r\n이런식으로 하면 **부모태그와 자식태그** 관계의 태그를 완성할 수 있습니다. **>**를 이용해서 상위, 하위 구조를 만들어낼 수 있는 겁니다. 중요한건 **탭**을 누르는 겁니다.\r\n\r\n```text\r\nh2{제목}+p{문단}\r\n```\r\n\r\n```html\r\n<h2>제목</h2>\r\n<p>문단</p>\r\n```\r\n\r\n태그 이름뒤에 **중괄호**를 붙이고 중괄호의 **안에 내용**을 입력하고 **탭**을 누르면 여는 태그와 닫는 태그의 안에 내용이 들어가게 됩니다. **+**를 이용하면 **형제 관계**에 있는 태그를 완성할 수 있습니다.\r\n\r\n이렇게 간단하게만 알아봐도 Emmet의 기능은 짱짱하다는 것을 알 수 있습니다. 이처럼 Emmet을 사용하면 아주 편하게 HTML 코딩이 가능합니다.\r\n\r\n<Line />\r\n\r\n이번 글에서는 vscode에 대해서 알아보는 시간을 가져봤습니다. vscode를 설치하고, 실행하고 설정을 건드리는 방법이나 Emmet을 사용하는 방법에 대해서 살펴봤죠. vscode도 지금은 낯설겠지만 계속 만져보다보면 익숙해질 것이라고 생각합니다.\r\n\r\n다음 글에서는 **설치하면 좋은 확장 프로그램**에 대해서 다뤄보도록 하겠습니다. 이번 글은 여기까지입니다. 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"09","yearMonth":"2021-09"}},"next":{"frontMatter":{"id":28,"title":"웹 개발을 위한 HTML 가이드 14편 - 링크 태그(a)","description":"이번 글은 웹 개발을 위한 HTML 가이드 14편입니다. 시간이 참 오래 흘렀는데 제가 게을러서 14편 밖에 작성하질 못했네요. 아무튼간에 이제는 조금 더 자주 가이드를 작성하도록 하고, 저번 두 글 Visual Studio Code 사용하기 VSCode 추천 확장 프로그램를 통해서 우리는 편집기를 메모장에서 vscode로 교체했습니다. 간단한 기능들과 확장 프로그램을 알려드렸으니 요령껏 잘 사용하시면 되겠습니다. 이번 글에서는 저번 글에 예고했던대로 웹 페이지끼리 서로 연결해주는 하이퍼 링크를 만들 수 있는 링크 태그에 대해서 알아볼 겁니다. 링크는 a태그로 만들 수 있습니다. 웹은 하이퍼링크로 연결되어 있는 웹 페이지들의 세상이라고 했었죠. 그렇기 때문에 링크는 그야말로 웹의 꽃이자 모든 것이라고 해도 과언이 아닙니다. 그럼 이제 이 링크 태그에 대해서 제대로 알아보도록 합시다.","coverImage":"https://drive.google.com/uc?export=view&id=1esDsKjF27YIDtIqt4Fm_8P5gcjqNPGop","tags":["가이드","HTML","웹 개발","프로그래밍","코딩","웹 코딩","웹 프로그래밍","HTML 공부하기","HTML 초보","링크 태그","a 태그","하이퍼 링크","링크"],"categories":["가이드","HTML"],"createdAt":1632505740000,"updatedAt":1636817700000,"keywords":[],"drawDate":1632505740000,"display":true,"type":"post"},"slug":"2021-09-25-01-link-tag","fullPath":"/post/2021-09-25-01-link-tag","content":"\r\nimport {\r\n  A, Bold, Details, Dl, H, Message, NoteBottom, NoteTop, P,\r\n  Quote, Score, Youtube, Ul, Ol, Em, Gray, Code, Kbd, Image,\r\n  Q, Strong, Spoiler, Strike, Line, Mark, HtmlGuideMessage, Name,\r\n  Dt, Dd\r\n} from '@/components/Post';\r\n\r\n<HtmlGuideMessage />\r\n\r\n# 개요\r\n이번 글은 웹 개발을 위한 HTML 가이드 14편입니다. 시간이 참 오래 흘렀는데 제가 게을러서 14편 밖에 작성하질 못했네요. 아무튼간에 이제는 조금 더 자주 가이드를 작성하도록 하고, 저번 두 글 [Visual Studio Code 사용하기](/post/2021-09-13-01-vscode-install) [VSCode 추천 확장 프로그램](/post/2021-09-23-01-vscode-extension)를 통해서 우리는 편집기를 메모장에서 vscode로 교체했습니다. 간단한 기능들과 확장 프로그램을 알려드렸으니 요령껏 잘 사용하시면 되겠습니다.\r\n\r\n이번 글에서는 저번 글에 예고했던대로 웹 페이지끼리 서로 연결해주는 **하이퍼 링크**를 만들 수 있는 **링크 태그**에 대해서 알아볼 겁니다. 링크는 `a`태그로 만들 수 있습니다. 웹은 하이퍼링크로 연결되어 있는 웹 페이지들의 세상이라고 했었죠. 그렇기 때문에 링크는 그야말로 **웹의 꽃이자 모든 것**이라고 해도 과언이 아닙니다.\r\n\r\n그럼 이제 이 링크 태그에 대해서 제대로 알아보도록 합시다.\r\n\r\n# 링크 태그\r\n<P>위에서 언급했듯이 <Strong>링크 태그</Strong>(이하 <Code>a</Code>태그)는 <Strong>웹에서 중요한 위치</Strong>를 차지하고 있습니다. <Strong>링크가 없으면 웹은 의미가 없어지기 때문입니다.</Strong> 그만큼 중요한 역할을 합니다. 그래서 최대한 빨리 <Code>a</Code>태그에 대해서 다루고 싶었습니다. 어떻게 해야 처음 HTML을 접하는 분들이 이해하기 쉽게 설명할 수 있을지를 고민했는데 그게 잘 될는지는 모르겠습니다. <Bold>이 글이 잘 이해가 안된다면 설명을 못한 저의 문제입니다. 저의 공부가 덜 된 것이지.. 여러분의 문제는 아닙니다.</Bold></P>\r\n\r\n`a`태그는 일반적으로 **html 페이지과 html 페이지를 연결**해주는 역할을 합니다. 웹 상에 존재하는 그 어떤 html 파일과도 연결이 가능하기 때문에 이론상 유튜브에서 네이버로도 점프가 가능합니다. <Bold>물론 유튜브에는 네이버로 이동하는 링크가 없습니다!</Bold>\r\n\r\n`a`태그는 여는 태그와 닫는 태그로 구성이 되어있습니다.\r\n\r\n## 하이퍼 링크\r\n`a`태그의 유일하면서도 강력한 기능은 바로 **하이퍼 링크를 구현하는 것**에 있습니다. 하이퍼 링크는 위에서 계속 설명했던 것처럼 **html 페이지와 html 페이지를 연결하는 기능**입니다. 중요한 점은 하이퍼 링크는 기본적으로는 쌍방향이 아니라 단방향이라는 것입니다. A지점에서 B지점으로 이동을 한다고 치면 B지점으로 이동하고 싶은 A지점이 일방적으로 접근하는 것입니다.\r\n\r\n하지만 B지점에도 A지점으로 통하는 하이퍼 링크가 있다면 이 경우엔 단방향이 아니라 쌍방향이 되겠죠. 왔다가 갔다가를 반복할 수 있으니까요. 이런 쌍방향 링크들은 웹 사이트 하위에 있는 웹 페이지들에서 나타납니다. 하이퍼 링크는 없는 곳이 없습니다. 웹이라면 어디에나 하이퍼 링크가 존재합니다.\r\n\r\n`a`태그를 이용하면 내 페이지(사이트)에서 다른 웹 사이트로 넘어가거나 내 페이지끼리 왔다 갔다 할 수 있습니다. 그럼 이제 본격적으로 어떻게 사용하는 것인지 알아보도록 합시다.\r\n\r\n## 내 페이지에서 다른 웹 사이트 연결하기\r\n<P>여러분의 프로젝트 폴더에서 연습할 파일을 아무거나 만들어봅시다. 저는 작업 폴더 안에 training 이라는 폴더를 하나 만들어 그 안에 <Name>link.html</Name> 이라고 이름을 지었습니다. 전에 만들었던 <Name>index.html</Name>은 실전 연습을 할 때에 건드려볼 겁니다. 아무튼 이 안에다가 <Code>a</Code>태그를 연습해봅시다.</P>\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1>아이유</h1>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n`div`태그를 하나 만들고 그 안에 `h1`태그와 `p`태그를 넣었습니다. 저는 아이유라는 제목에 **링크**를 달고 싶어졌습니다. 저는 어쩔 수 없는 아이유 신자이기 때문에 아이유에 대한 신앙을 더 널리 퍼뜨리고 싶거든요. 이럴 때 사용하는 게 바로 `a`태그인 겁니다. 넣어봅시다.\r\n\r\n구글에서 아이유를 검색했을 때 나오는 검색 결과 페이지를 제목에 링크해볼겁니다. 여러분은 아무 제목을 적어도 상관 없고 그냥 아무 사이트를 연결해도 상관 없습니다. 저는 그냥 이게 하고 싶었습니다.(?)\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"https://www.google.com/search?q=%EC%95%84%EC%9D%B4%EC%9C%A0&oq=%EC%95%84%EC%9D%B4%EC%9C%A0&aqs=chrome..69i57j69i64l2j69i60j69i61l2j0i433i512l2&sourceid=chrome&ie=UTF-8\">아이유</a></h1>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n![아이유를 검색한 결과 페이지를 링크했다.](https://drive.google.com/uc?export=view&id=1ZsWk03JHV1n4nC8ReDfPdc-pHEZQJj0h)\r\n\r\n`a`태그에는 기본적으로 들어가야 하는 속성이 있습니다. 바로 `href` 입니다. 이 속성의 값으로는 **웹 상의 주소**가 들어갑니다. 웹 페이지와 웹 페이지를 연결하는거니까 아주 당연한 것이겠죠. 아무튼 구글 검색 결과를 넣어봤습니다.\r\n\r\n<P>링크가 적용되면 기본적으로 텍스트의 색이 파랗게 변하고 밑줄이 생깁니다. 이 디자인은 언제든지 바꿀 수 있습니다.<Gray>(CSS를 강조하는 이유는 익숙해지라는 차원에서 입니다.)</Gray> 그런데 저는 이미 방문을 했던 페이지라서 보라색으로 뜨네요. 그럼 이제 저장을 하고 라이브 서버를 켜봅시다. 제목에 건 링크를 클릭하면 그 페이지로 넘어가는걸 볼 수 있습니다.</P>\r\n\r\n축하합니다! 여러분은 최초로 링크를 구현했습니다!\r\n\r\n## 내 페이지에서 다른 내 페이지와 연결하기\r\n링크는 다른 웹 사이트의 페이지 뿐만 아니라 **우리가 만든 페이지와도 연결이 가능**합니다. 단 현재상으로는 **라이브서버를 켰을 때에만 가능**한 방법입니다. 그 이유는 아직 우리는 서버에 파일을 올리지도 않았고 그런 방법도 모르기 때문이죠. 웹 상의 모든 페이지들은 전부가 서버 컴퓨터에 올라간 파일들이라는 걸 잊으면 안됩니다.\r\n\r\n<P>아무튼 라이브서버를 통해서 우리의 프로젝트 폴더가 웹 상에 일시적으로나마 존재하게끔 만들어서 링크를 테스트해볼 수 있습니다. 저는 <Name>link.html</Name> 파일이 있는 폴더의 안에 또 다른 파일을 만들었습니다. 파일 이름은 <Name>link2.html</Name> 이라고 지었습니다.</P>\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"https://www.google.com/search?q=%EC%95%84%EC%9D%B4%EC%9C%A0&oq=%EC%95%84%EC%9D%B4%EC%9C%A0&aqs=chrome..69i57j69i64l2j69i60j69i61l2j0i433i512l2&sourceid=chrome&ie=UTF-8\">아이유</a></h1>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n<P>위와 같았던 코드를 아래처럼 바꿨습니다. 일단 <Code>href</Code>속성의 값을 비워뒀고 <Code>p</Code>태그를 없앴습니다. <Code>p</Code>태그는 <Name>link2.html</Name>로 옮겼습니다.</P>\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"\">아이유</a></h1>\r\n</div>\r\n```\r\n\r\n```html file=link2.html\r\n<div>\r\n  <p>대한민국의 가수이자 배우. 본명은 이지은이며, 예명 아이유(IU)는 \"음악으로 너와 내가 하나가 된다\"라는 뜻을 가지고 있다.</p>\r\n</div>\r\n```\r\n\r\n파일을 두개로 쪼갠 이유는 제목을 클릭하면 설명이 나오게끔 하기 위함입니다. 제 파일에서 제 파일로 연결을 하는거죠. 제 파일에서 다른 파일로 연결을 할 때에도 주소를 적어야 합니다. 이때 나오는 개념이 **절대경로**과 **상대경로**입니다.\r\n\r\n하지만 이건 지금 다루기엔 너무 복잡하니까 다음 글에서 제대로 다뤄보도록 하고 아주 간단하게만 다뤄보자면, 예전에 작성했던 [index.html에 대해](/post/2021-09-04-01-filename-index) 글을 보면 프로젝트 폴더의 최상위 폴더는 웹 상에서 **/**로 표현한다고 했었습니다. 이 슬래시로 시작하는 주소는 **절대경로**입니다. 절대경로는 루트폴더에서부터 접근합니다.\r\n\r\n<Message color='b'>\r\n  <p>루트 폴더는 프로젝트 폴더의 <Strong>최상위 폴더</Strong>를 의미합니다!</p>\r\n</Message>\r\n\r\n상대경로는 루트폴더에서부터 접근하는 게 아니라 특정 파일을 기점으로 접근합니다. <Name>link.html</Name>과 <Name>link2.html</Name>은 둘 다 training 폴더 안에 있습니다. 같은 폴더 안에 있는 파일에 접근하려면 **./**로 시작합니다. 상위 폴더에 있는 파일에 접근하려면 **../**로 시작합니다. 상위 폴더의 상위 폴더라면 **../../**로 접근하겠죠.\r\n\r\n제 프로젝트 폴더의 기준으로 절대경로와 상대경로를 적용한 주소는 아래와 같습니다.\r\n\r\n* **절대경로:** /training/link2.html\r\n* **상대경로:** ./link2.html\r\n\r\n이걸 a태그에 적용하면 아래와 같겠죠.\r\n\r\n```html file=link.html\r\n<div>\r\n  <h1><a href=\"./link2.html\">아이유</a></h1>\r\n  <!-- <h1><a href=\"/training/link2.html\">아이유</a></h1> 절대경로일 경우 -->\r\n</div>\r\n```\r\n\r\n이렇게 하고 저장한 후에 라이브서버에서 실행해보면 설명 페이지로 잘 넘어가게 됩니다. 하지만 뭔가 아쉬운 점이 있죠. 어떤 웹 사이트를 보면 링크를 클릭했을 때 **새 창**에서 띄우던데 우리도 그렇게 할 수 없을까요? 그래서 존재하는 게 바로 아래와 같은 속성들입니다.\r\n\r\n## 링크 태그의 다른 속성\r\n`a`태그에는 아주 많은 속성들이 있지만 기본적으로 알면 좋은 두개의 속성을 다뤄보도록 하겠습니다.\r\n\r\n### target 속성\r\n`target`속성은 쉽게 말해 **현재 페이지에서 링크를 띄우느냐 새로운 창이나 탭에서 링크를 띄우느냐**를 결정하는 속성입니다. 값은 총 4개가 있지만 우리는 그냥 두개만 알면 됩니다. **_self**과 **_blank**입니다. **_self**는 현재 페이지에서 띄우게 합니다. 기본값입니다. `target`속성을 명시하지 않아도 기본적으로 실행된다는 것입니다. 그래서 새 창으로 띄우려면 **_blank**를 값으로 넣으면 됩니다.\r\n\r\n```html\r\n<a href=\"#\" target=\"_blank\">블라블라</a>\r\n```\r\n\r\n### rel 속성\r\n`rel`속성은 **relationship**의 약자입니다. 현재 페이지와 링크될 페이지간의 관계를 설정하는 것인데, `target`속성을 사용할 때에 혹 있을지 모르는 해커의 **외부적인 접근을 방지**해야 하는데 이를 수행하기 위한 속성이기도 합니다. `target=\"_blank\"`를 사용할 때에는 `rel=\"noreferrer noopener\"`를 함께 작성해주면 됩니다.\r\n\r\n이외 에도 다양한 값들이 있는데, 나중에 여러분의 지식이 더 커지면 그때 공부해도 될 겁니다.\r\n\r\n```html\r\n<a href=\"#\" target=\"_blank\" rel=\"noreferrer noopener\">블라블라</a>\r\n```\r\n\r\n# 실전 연습\r\n<P>그럼 이제 계속해서 수정해왔던 <Name>index.html</Name> 파일을 준비해봅시다. 지금까지 알아본 것을 바탕으로 우리의 프로젝트를 발전 시켜 보는겁니다.</P>\r\n\r\n우리의 프로젝트는 아래처럼 생겼죠.\r\n\r\n```html file=index.html\r\n<h1>웹 개발의 3요소</h1>\r\n<h2>HTML</h2>\r\n<p>HTML은 웹의 뼈대를 만들어주는 기능을 하는 마크업 언어입니다.</p>\r\n<h2>CSS</h2>\r\n<p>CSS는 HTML로 만든 뼈대에 피부를 만들어주고 화장을 시켜주는 스타일 시트 언어입니다.</p>\r\n<h2>JavsScript</h2>\r\n<p>자바스크립트는 HTML과 CSS를 동적으로 제어할 수 있는 웹의 뇌와 같은 언어입니다.</p>\r\n```\r\n\r\n`h2`태그들에 링크를 넣고 싶습니다. 각각의 키워드를 구글에 검색한 결과를 링크하려고 합니다. 아래처럼 하면 되겠죠.\r\n\r\n```html file=index.html\r\n<h1>웹 개발의 3요소</h1>\r\n<h2><a href=\"https://bit.ly/3lXTSYW\" target=\"_blank\" rel=\"noopener noreferrer\">HTML</a></h2>\r\n<p>HTML은 웹의 뼈대를 만들어주는 기능을 하는 마크업 언어입니다.</p>\r\n<h2><a href=\"https://bit.ly/3u9M22j\" target=\"_blank\" rel=\"noopener noreferrer\">CSS</a></h2>\r\n<p>CSS는 HTML로 만든 뼈대에 피부를 만들어주고 화장을 시켜주는 스타일 시트 언어입니다.</p>\r\n<h2><a href=\"https://bit.ly/39BnSnM\" target=\"_blank\" rel=\"noopener noreferrer\">JavsScript</a></h2>\r\n<p>자바스크립트는 HTML과 CSS를 동적으로 제어할 수 있는 웹의 뇌와 같은 언어입니다.</p>\r\n```\r\n\r\n`href`속성에는 링크할 페이지의 주소를 넣는 거였죠. 구글 검색결과 페이지의 주소가 너무 길어서 줄였습니다. 새 창에서 뜨게 하기 위해서 `target=\"_blank\"`속성을 넣었고 같이 따라오는 `rel=\"noopener noreferrer\"`속성은 외부의 악의적인 접근을 방지하기 위해 넣었습니다.\r\n\r\n![프로젝트 세번째 과정.](https://drive.google.com/uc?export=view&id=1mRWGfvGJTB_zw2L2V2tEXjYj0RNcNcY6)\r\n\r\n<P>이렇게 하면 우리의 프로젝트는 좀 더 발전했습니다! 이번 글의 실전 연습에 대한 부분은 깃허브 <A href='https://github.com/nihil-programming-guide/web-tuto/tree/master/HTML' type='normal'>web-tuto</A>에 기록해놨습니다. 3번 보시면 됩니다.</P>\r\n\r\n<Line />\r\n\r\n가이드를 작성하다보니 글이 아주 길어졌습니다. 하지만 내용은 그다지 어려운 부분은 없을겁니다. 절대경로나 상대경로 부분은 좀 살짝 머리가 아플 수 있는데 다음 글에서 제대로 다뤄볼 예정입니다. 이번 글은 여기까지입니다. 이번 글에서는 `a`태그에 대해서 알아봤고 우리의 기술은 조금 더 늘었습니다.\r\n\r\n그럼 이번 글은 여기서 마치도록 하고 다음 글에서 봅시다.\r\n","date":{"year":"2021","month":"09","yearMonth":"2021-09"}}},"__N_SSG":true}
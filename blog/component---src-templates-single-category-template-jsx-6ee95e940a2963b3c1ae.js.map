{"version":3,"sources":["webpack://nihil-blog/./src/templates/SingleCategoryTemplate.jsx"],"names":["data","pageContext","allMdx","edges","totalCount","siteData","pageName","category","pageUrl","pageType","id","map","post","className","key","node","to","slug","frontmatter","title","excerpt","dateTime","createdAt","createString","item","index","tag"],"mappings":"+JA6FA,UAzF0B,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAAmB,EACrBD,EAAKE,OAA5BC,EAD4C,EAC5CA,MAAOC,EADqC,EACrCA,WAETC,EAAW,CACfC,SAAS,IAAKL,EAAYM,SAAlB,YAAsCH,EAAtC,IACRI,QAAQ,oBAAqBP,EAAYM,SACzCE,SAAU,WAGZ,OACE,yBACE,QAAC,IAAcJ,GACb,eAAKK,GAAG,uBACN,eAAKA,GAAG,SACR,mBAASA,GAAG,wBACV,sBAAYT,EAAYM,SAAxB,YAAiDH,EAAjD,MACA,4DAEF,mBAASM,GAAG,sBACTP,EAAMQ,KAAI,SAACC,GAAD,OACT,eAAKC,UAAU,YAAYC,IAAKF,EAAKG,KAAKL,KACxC,cAAIG,UAAU,eACZ,QAAC,KAAD,CAAMG,GAAE,IAAMJ,EAAKG,KAAKE,KAAhB,SAA4B,aAAGJ,UAAU,uBAAjD,IAA0ED,EAAKG,KAAKG,YAAYC,SAElG,eAAKN,UAAU,iBACb,aAAGA,UAAU,iBACX,gBAAMA,UAAU,cAAY,aAAGA,UAAU,yBAAzC,UACA,oBACA,gBAAMA,UAAU,oBAAoBD,EAAKG,KAAKK,WAEhD,aAAGP,UAAU,iBACX,gBAAMA,UAAU,cAAY,aAAGA,UAAU,iBAAzC,WACA,gBAAMA,UAAU,YAAYQ,SAAUT,EAAKG,KAAKG,YAAYI,WACzDV,EAAKG,KAAKG,YAAYK,gBAG3B,aAAGV,UAAU,iBACX,gBAAMA,UAAU,cAAY,aAAGA,UAAU,uBAAzC,SACCD,EAAKG,KAAKG,YAAYX,SAASI,KAAI,SAACa,EAAMC,GAAP,OAClC,QAAC,KAAD,CAAMT,GAAE,eAAiBQ,EAAjB,OAA6BX,UAAU,gBAAgBC,IAAQU,EAAL,IAAaC,IAC7E,aAAGZ,UAAU,uBADf,IACwCW,QAI5C,aAAGX,UAAU,iBACX,gBAAMA,UAAU,cAAY,aAAGA,UAAU,gBAAzC,OACCD,EAAKG,KAAKG,YAAYQ,IAAIf,KAAI,SAACa,EAAMC,GAAP,OAC7B,QAAC,KAAD,CAAMT,GAAE,SAAWQ,EAAX,OAAuBX,UAAU,WAAWC,IAAQU,EAAL,IAAaC,IAClE,aAAGZ,UAAU,eADf,IACgCW","file":"component---src-templates-single-category-template-jsx-6ee95e940a2963b3c1ae.js","sourcesContent":["import AppLayout from '@layouts/AppLayout';\r\nimport { graphql, Link } from 'gatsby';\r\nimport React from 'react';\r\n\r\nconst SingleTagTemplate = ({ data, pageContext, }) => {\r\n  const { edges, totalCount, } = data.allMdx;\r\n\r\n  const siteData = {\r\n    pageName: `\"${pageContext.category}\" 관련 포스트 ${totalCount}건`,\r\n    pageUrl: `/blog/categories/${pageContext.category}`,\r\n    pageType: 'website',\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppLayout {...siteData}>\r\n        <div id='blog-category-page'>\r\n          <div id='top'></div>\r\n          <section id='category-post-count'>\r\n            <h2>&ldquo;{pageContext.category}&rdquo; 관련 포스트 {totalCount}건</h2>\r\n            <p>다른 카테고리를 보려면 상단의 메뉴에서 카테고리 버튼을 클릭하세요.</p>\r\n          </section>\r\n          <section id='category-post-list'>\r\n            {edges.map((post) => (\r\n              <div className='list-item' key={post.node.id}>\r\n                <h3 className='list-title'>\r\n                  <Link to={`/${post.node.slug}#top`}><i className='fas fa-comment-alt' /> {post.node.frontmatter.title}</Link>\r\n                </h3>\r\n                <div className='list-content'>\r\n                  <p className='content-info'>\r\n                    <span className='info-name'><i className='fas fa-align-justify' /> 미리보기</span>\r\n                    <br />\r\n                    <span className='list-description'>{post.node.excerpt}</span>\r\n                  </p>\r\n                  <p className='content-info'>\r\n                    <span className='info-name'><i className='far fa-clock' /> 작성 날짜</span>\r\n                    <time className='info-time' dateTime={post.node.frontmatter.createdAt}>\r\n                      {post.node.frontmatter.createString}\r\n                    </time>\r\n                  </p>\r\n                  <p className='content-info'>\r\n                    <span className='info-name'><i className='fas fa-folder-open' /> 카테고리</span>\r\n                    {post.node.frontmatter.category.map((item, index) => (\r\n                      <Link to={`/categories/${item}#top`} className='info-category' key={`${item}-${index}`}>\r\n                        <i className='fas fa-folder-open' /> {item}\r\n                      </Link>\r\n                    ))}\r\n                  </p>\r\n                  <p className='content-info'>\r\n                    <span className='info-name'><i className='fas fa-tags' /> 태그</span>\r\n                    {post.node.frontmatter.tag.map((item, index) => (\r\n                      <Link to={`/tags/${item}#top`} className='info-tag' key={`${item}-${index}`}>\r\n                        <i className='fas fa-tag' /> {item}\r\n                      </Link>\r\n                    ))}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        </div>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CategoryQuery = graphql`\r\n  query CATEGORY_QUERY($category: String) {\r\n    allMdx(\r\n      filter: {frontmatter: {notice: {nin: true}, display: {eq: true}, category: {in: [$category]}}}\r\n      sort: {fields: frontmatter___createdAt, order: DESC}\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          slug\r\n          excerpt(pruneLength: 250, truncate: true)\r\n          frontmatter {\r\n            createString: createdAt(formatString: \"YYYY년 MM월 DD일 HH시 mm분\")\r\n            updateString: updatedAt(formatString: \"YYYY년 MM월 DD일 HH시 mm분\")\r\n            createdAt\r\n            updatedAt\r\n            category\r\n            tag\r\n            title\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SingleTagTemplate;"],"sourceRoot":""}